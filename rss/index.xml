<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 15 Jun 2021 10:49:58 +0900</pubDate>
    <lastBuildDate>Tue, 15 Jun 2021 10:49:58 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2021-06-15のJS: React 18 αリリース、Deno 1.11(Docker Images)、Plotly.js 2.0</title>
        <description>&lt;p&gt;JSer.info #544 - React 18のα版のリリースとReact 18での変更予定についての記事が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html&quot;&gt;The Plan for React 18 – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React 18のα版はライブラリのメンテナー向けで、これにあわせてReactのワーキンググループが作られています。&lt;br&gt;
React 18の詳細な変更予定については、次のDiscussionsにまとめられて議論されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions&quot;&gt;Discussions · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React 18の変更は基本的に &lt;a href=&quot;https://github.com/reactwg/react-18/discussions/6&quot;&gt;&lt;code&gt;ReactDOM.createRoot&lt;/code&gt;&lt;/a&gt;という新しいAPIを使った場合のopt-in方式となっています。&lt;/p&gt;

&lt;p&gt;全体的な概要は次のスレッドにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/reactwg/react-18/discussions/4&quot;&gt;Introducing React 18 · Discussion #4 · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それぞれの変更のサマリは次のようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/5&quot;&gt;Replacing render with createRoot · Discussion #5 · reactwg/react-18&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ReactDOM.render&lt;/code&gt;の代わりとなる&lt;code&gt;React.createRoot&lt;/code&gt; というRoot(Container)を作るためのAPIが追加された&lt;/li&gt;
&lt;li&gt;Legacy &lt;code&gt;render&lt;/code&gt;のAPIは互換性のために維持される&lt;/li&gt;
&lt;li&gt;React 18の機能変更や機能追加は、基本的にこの新しい&lt;code&gt;React.createRoot&lt;/code&gt; 以下のTreeに適応される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/21&quot;&gt;Automatic batching for fewer renders in React 18 · Discussion #21 · reactwg/react-18&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;stateの変更が自動的にbatch処理(グループ化)して、レンダリングがまとめられる&lt;/li&gt;
&lt;li&gt;以前あった&lt;code&gt;unstable_batchedUpdates&lt;/code&gt;に相当する処理&lt;/li&gt;
&lt;li&gt;意図的にそれぞれの変更でレンダリングする方法として&lt;code&gt;ReactDOM.flushSync&lt;/code&gt;APIが追加されている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/22&quot;&gt;Upgrading to React 18 on the server · Discussion #22 · reactwg/react-18&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Node.js Streamを使ったSSRをサポートする&lt;code&gt;renderToNodeStream&lt;/code&gt;が追加される&lt;/li&gt;
&lt;li&gt;詳細な仕組みは&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/37&quot;&gt;New Suspense SSR Architecture in React 18 #37&lt;/a&gt;で解説されている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/41&quot;&gt;New feature: startTransition · Discussion #41 · reactwg/react-18&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;遷移中を表現する&lt;code&gt;startTransition&lt;/code&gt;について。 遷移中に不要なレンダリングをストップさせて、応答性を維持する目的&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/19&quot;&gt;Adding Strict Effects to StrictMode · Discussion #19 · reactwg/react-18&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;バグを見つけるためにDevelopmentモードの&lt;code&gt;StrictMode&lt;/code&gt;ではコンポーネントを2重にレンダリングする&lt;/li&gt;
&lt;li&gt;mount → unmount → mountとすることで意図しないeffectを見つける&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/18&quot;&gt;How to support strict effects · Discussion #18 · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Deno 1.11がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/v1.11&quot;&gt;Deno 1.11 Release Notes | Deno Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/deno-release-note-1-11-0&quot;&gt;Deno 1.11.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;公式のDocker Imageを追加、Web Crypto APIsの改善と&lt;code&gt;crypto.randomUUID&lt;/code&gt;のサポート、Fetch APIが&lt;code&gt;AbortSignal&lt;/code&gt;をサポートしています。&lt;br&gt;
また&lt;code&gt;deno lint&lt;/code&gt;がStableとなり、&lt;code&gt;deno compile&lt;/code&gt;でDynamic Importのサポート、&lt;code&gt;Text{Encoder,Decodeer}Stream&lt;/code&gt;のサポートなども含まれています。&lt;/p&gt;

&lt;p&gt;その他には、&lt;code&gt;deno lsp&lt;/code&gt;の改善やDeno APIが&lt;code&gt;file://&lt;/code&gt;な&lt;code&gt;URL&lt;/code&gt;オブジェクトをサポートするようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-0-d3-d3&quot;&gt;Release v7.0.0 · d3/d3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3/releases/tag/v7.0.0&quot; title=&quot;Release v7.0.0 · d3/d3&quot;&gt;github.com/d3/d3/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;D3.js v7.0.0リリース。&lt;br&gt;
ESMの対応、nullの対応を変更、&lt;code&gt;d3.selectAll&lt;/code&gt;などでArray-likeをArrayに変換して扱うように。&lt;br&gt;
機能追加として&lt;code&gt;d3.mode&lt;/code&gt;、&lt;code&gt;d3.flatGroup&lt;/code&gt;、&lt;code&gt;d3.flatRollup&lt;/code&gt;、&lt;code&gt;transition.selectChild&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-7-0-nextapps-de-flexsearch&quot;&gt;Release v0.7.0 · nextapps-de/flexsearch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nextapps-de/flexsearch/releases/tag/0.7.0&quot; title=&quot;Release v0.7.0 · nextapps-de/flexsearch&quot;&gt;github.com/nextapps-de/flexsearch/releases/tag/0.7.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで書かれた全文検索エンジンのflexsearch 0.7.0リリース。&lt;br&gt;
一から書き直されている。&lt;br&gt;
メモリ消費量やパフォーマンスの改善、Bidirectional Contextのサポート、Node.jsの&lt;code&gt;worker_thread&lt;/code&gt;の対応など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nextapps-de/flexsearch/blob/0.7.0/doc/0.7.0.md&quot; title=&quot;flexsearch/0.7.0.md at 0.7.0 · nextapps-de/flexsearch&quot;&gt;flexsearch/0.7.0.md at 0.7.0 · nextapps-de/flexsearch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-11-release-notes-deno-blog&quot;&gt;Deno 1.11 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.11&quot; title=&quot;Deno 1.11 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.11&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.11リリース。&lt;br&gt;
Docker Imageの追加、Web Crypto APIsの改善と&lt;code&gt;crypto.randomUUID&lt;/code&gt;のサポート、Fetch APIが&lt;code&gt;AbortSignal&lt;/code&gt;をサポート。&lt;br&gt;
また&lt;code&gt;deno lint&lt;/code&gt;がStableとなり、&lt;code&gt;deno compile&lt;/code&gt;でDynamic Importのサポート、&lt;code&gt;Text{Encoder,Decodeer}Stream&lt;/code&gt;のサポートなど。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/deno-release-note-1-11-0&quot; title=&quot;Deno 1.11.0 がリリースされたので新機能や変更点の紹介&quot;&gt;Deno 1.11.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2-16-0-qunitjs-qunit&quot;&gt;Release 2.16.0 · qunitjs/qunit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/qunitjs/qunit/releases/tag/2.16.0&quot; title=&quot;Release 2.16.0 · qunitjs/qunit&quot;&gt;github.com/qunitjs/qunit/releases/tag/2.16.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;QUnit 2.16.0リリース。&lt;br&gt;
&lt;code&gt;QUnit.test.each&lt;/code&gt;メソッド、&lt;code&gt;failOnZeroTests&lt;/code&gt;オプション、TAPレポーターの対応。&lt;br&gt;
&lt;code&gt;QUnit.module&lt;/code&gt;でPromiseを返した場合に警告がでるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-plotly-js-2-0-graphing-library-plotly-js-plotly-community-forum&quot;&gt;🎉 Announcing Plotly.js 2.0! - Graphing Library / Plotly.js - Plotly Community Forum&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://community.plotly.com/t/announcing-plotly-js-2-0/53675&quot; title=&quot;🎉 Announcing Plotly.js 2.0! - Graphing Library / Plotly.js - Plotly Community Forum&quot;&gt;community.plotly.com/t/announcing-plotly-js-2-0/53675&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Plotly.js 2.0リリース。&lt;br&gt;
IE 9/10のサポート終了、非推奨のAPI、&lt;code&gt;Plotly.plot()&lt;/code&gt;や&lt;code&gt;plotly.d3&lt;/code&gt;などの削除。&lt;br&gt;
CSPの&lt;code&gt;usafe-eval&lt;/code&gt;への対応、Custom Bundleの作成方法の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/plotly/plotly.js/releases/tag/v2.0.0&quot; title=&quot;Release v2.0.0 · plotly/plotly.js&quot;&gt;Release v2.0.0 · plotly/plotly.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-layout-generator&quot;&gt;CSS Layout Generator&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://layout.bradwoods.io/&quot; title=&quot;CSS Layout Generator&quot;&gt;layout.bradwoods.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Grid Layoutのジェネレーターツール。&lt;br&gt;
CSS Gridのプロパティを変更しながら、どのような表示になるかを確認できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-5-0-0-unitech-pm2&quot;&gt;Release 5.0.0 · Unitech/pm2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Unitech/pm2/releases/tag/5.0.0&quot; title=&quot;Release 5.0.0 · Unitech/pm2&quot;&gt;github.com/Unitech/pm2/releases/tag/5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nodeのプロセス管理ツールのpm2 5.0.0リリース。&lt;br&gt;
ローカルのシステムモニタリングが新しくなり、サーバメトリクスの表示が追加された。。&lt;br&gt;
pm2.io へ送信するデータをJSON Patchベースの差分にすることで転送量の削減など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-astro-ship-less-javascript&quot;&gt;Introducing Astro: Ship Less JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://astro.build/blog/introducing-astro&quot; title=&quot;Introducing Astro: Ship Less JavaScript&quot;&gt;astro.build/blog/introducing-astro&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptを含まない静的サイトを生成できるSSGツール。&lt;br&gt;
Island Architectureのようにインタラクティブな部分だけJavaScriptを含んだコンポーネントを利用できるようになっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/snowpackjs/astro&quot; title=&quot;snowpackjs/astro: 🚀🧑‍🚀 Keep your eyes to the skies, astronauts!&quot;&gt;snowpackjs/astro: 🚀🧑‍🚀 Keep your eyes to the skies, astronauts!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-plan-for-react-18-react-blog&quot;&gt;The Plan for React 18 – React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html&quot; title=&quot;The Plan for React 18 – React Blog&quot;&gt;reactjs.org/blog/2021/06/08/the-plan-for-react-18.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 18のαリリースと変更予定について。&lt;br&gt;
Automatic batchingと&lt;code&gt;flushSync&lt;/code&gt;の追加、SuspenseのSSRサポートと&lt;code&gt;pipeToNodeWritable&lt;/code&gt;の追加、Concurrentモードのopt-inサポート。&lt;br&gt;
新しいrender APIである&lt;code&gt;createDOM&lt;/code&gt;の追加、バグを見つけるためにStrictModeではコンポーネントを2重にレンダリングするようなるなど。&lt;br&gt;
また、ReactのWorking Groupのリポジトリが作成されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions&quot; title=&quot;Discussions · reactwg/react-18&quot;&gt;Discussions · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/21&quot; title=&quot;Automatic batching for fewer renders in React 18 · Discussion #21 · reactwg/react-18&quot;&gt;Automatic batching for fewer renders in React 18 · Discussion #21 · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/22&quot; title=&quot;Upgrading to React 18 on the server · Discussion #22 · reactwg/react-18&quot;&gt;Upgrading to React 18 on the server · Discussion #22 · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/41&quot; title=&quot;New feature: startTransition · Discussion #41 · reactwg/react-18&quot;&gt;New feature: startTransition · Discussion #41 · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/5&quot; title=&quot;Replacing render with createRoot · Discussion #5 · reactwg/react-18&quot;&gt;Replacing render with createRoot · Discussion #5 · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactwg/react-18/discussions/19&quot; title=&quot;Adding Strict Effects to StrictMode · Discussion #19 · reactwg/react-18&quot;&gt;Adding Strict Effects to StrictMode · Discussion #19 · reactwg/react-18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-153-0-facebook-flow&quot;&gt;Release v0.153.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.153.0&quot; title=&quot;Release v0.153.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.153.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.153.0リリース。&lt;br&gt;
&lt;code&gt;this&lt;/code&gt;を使うクラスのメソッドを変数に入れて&lt;code&gt;this&lt;/code&gt;のbindの解除をエラーとするように、&lt;code&gt;flow fix&lt;/code&gt;コマンドで自動修正を適用できるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/flow-type/sound-typing-for-this-in-flow-d62db2af969e&quot; title=&quot;Sound Typing for “this” in Flow. In our most recent post, we alluded to… | by Daniel Sainati | Flow | Jun, 2021 | Medium&quot;&gt;Sound Typing for “this” in Flow. In our most recent post, we alluded to… | by Daniel Sainati | Flow | Jun, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-libsquoosh&quot;&gt;Introducing libSquoosh&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/introducing-libsquoosh/&quot; title=&quot;Introducing libSquoosh&quot;&gt;web.dev/introducing-libsquoosh/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;リサイズや圧縮などの画像処理を行うSquooshをライブラリとして利用できるlibSquooshの紹介記事。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/squoosh/tree/dev/libsquoosh&quot; title=&quot;squoosh/libsquoosh at dev · GoogleChromeLabs/squoosh&quot;&gt;squoosh/libsquoosh at dev · GoogleChromeLabs/squoosh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-memory-inspector-chrome-developers&quot;&gt;Introducing the Memory Inspector - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/memory-inspector/&quot; title=&quot;Introducing the Memory Inspector - Chrome Developers&quot;&gt;developer.chrome.com/blog/memory-inspector/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 91でDevToolsに追加されたMemory Inspectorについての記事。&lt;br&gt;
ArrayBuffersのバイトをエンディアンを選択して見れる。またDWARFを使うことでC++やWasmのメモリも見れることについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stryker-typescript-mutation-testing&quot;&gt;Strykerを使ってTypeScriptでMutation Testingする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/daikik/articles/8cd20776991a9c&quot; title=&quot;Strykerを使ってTypeScriptでMutation Testingする&quot;&gt;zenn.dev/daikik/articles/8cd20776991a9c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Stryker-jsを使ったMutation Testingについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;securing-your-website-with-subresource-integrity-css-tricks&quot;&gt;Securing Your Website With Subresource Integrity | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/securing-your-website-with-subresource-integrity/&quot; title=&quot;Securing Your Website With Subresource Integrity | CSS-Tricks&quot;&gt;css-tricks.com/securing-your-website-with-subresource-integrity/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptを配布するCDNやS3 bucketなどが書き換えられた場合にウェブサイトへの軽減するためのSubresource Integrity (SRI)の使い方についての記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-coming-in-eslint-v8-0-0-eslint-pluggable-javascript-linter&quot;&gt;What&amp;#039;s coming in ESLint v8.0.0 - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2021/06/whats-coming-in-eslint-8.0.0&quot; title=&quot;What&amp;amp;#039;s coming in ESLint v8.0.0 - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2021/06/whats-coming-in-eslint-8.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint v8.0.0の変更予定について。&lt;br&gt;
破壊的な変更として、Node 10のサポート終了、&lt;code&gt;meta.hasSuggestions&lt;/code&gt;と&lt;code&gt;meta.fixable&lt;/code&gt;がそれぞれ必須に、&lt;code&gt;CLIEngine&lt;/code&gt;の削除など。&lt;br&gt;
またES2022のサポート、利用してない&lt;code&gt;eslint-disable&lt;/code&gt;ディレクトリの&lt;code&gt;--fix&lt;/code&gt;に対応などを予定している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;from-avif-to-webp-a-new-smashing-book-by-addy-osmani-smashing-magazine&quot;&gt;From AVIF to WebP: A New Smashing Book By Addy Osmani — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/06/image-optimization-book-release/&quot; title=&quot;From AVIF to WebP: A New Smashing Book By Addy Osmani — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/06/image-optimization-book-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;画像フォーマット、画像の圧縮、ロード方法、レンダリング、Core Web Vitalsなどについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 15 Jun 2021 09:52:12 +0900</pubDate>
        <link>https://jser.info/2021/06/15/react-18-a-deno-1.11docker-images-plotly.js-2.0/</link>
        <guid isPermaLink="true">https://jser.info/2021/06/15/react-18-a-deno-1.11docker-images-plotly.js-2.0/</guid>
        
        <category>Tools</category>
        
        <category>node.js</category>
        
        <category>Image</category>
        
        <category>testing</category>
        
        <category>Chrome</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-06-08のJS: Lighthouse 8.0.0(スコア計算の変更)、Vue 3.1(@vue/compat)、 Mocha v9.0.0</title>
        <description>&lt;p&gt;JSer.info #543 - Lighthouse 8.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v8.0.0&quot;&gt;Release v8.0.0 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lighthouse 8.0.0ではパフォーマンススコアの計算式が変更されています。&lt;br&gt;
詳細は次のドキュメントにかかれていますが、今まで実験的だったCumulative Layout Shift (CLS)の比重が5%から15%へと増加しています。それにあわせて他のスコアの比重も変化しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/blob/master/docs/v8-perf-faq.md&quot;&gt;lighthouse/v8-perf-faq.md at master · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;機能追加として、レポートをメトリクス別にフィルターできるように、&lt;code&gt;csp-xss&lt;/code&gt;のAuditの追加なども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Vue 3.1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue-next/releases/tag/v3.1.0&quot;&gt;Release v3.1.0 Pluto · vuejs/vue-next&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vue 3.1.0では&lt;code&gt;@vue/compat&lt;/code&gt;というVue 2の互換APIを実装したパッケージが公開されています。&lt;br&gt;
既存のVue 2.xで書かれたアプリケーションをVue 3上で動かすためのMigration Buildとなっています。&lt;/p&gt;

&lt;p&gt;詳細は次のドキュメントで解説されていますが、Vue 2.xの時点での公開APIのみを実装した互換ビルドであるため、&lt;br&gt;
一部ライブラリは動かないことなどが書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v3.vuejs.org/guide/migration/migration-build.html&quot;&gt;Migration Build | Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、今後の予定では、Vue 3で実装されたComposition APIなどをVue 2.xへとバックポートしたVue 2.7がリリースされる予定となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScriptテストフレームワークのMocha 9.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/releases/tag/v9.0.0&quot;&gt;Release v9.0.0 · mochajs/mocha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mocha 9ではNode.js 10のサポート終了し、ESM(ECMAScript Modules)をネイティブサポートしています。&lt;br&gt;
ESMでの読み込みを試してみてから、読み込めなかった場合はCJS(CommonJS)で読み込むようなfallbackとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/pull/4635&quot;&gt;import-first loading of test files by giltayar · Pull Request #4635 · mochajs/mocha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には、&lt;code&gt;--dry-run&lt;/code&gt;オプションのサポート、非推奨だった&lt;code&gt;utils.lookupFiles()&lt;/code&gt;の削除などが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v10-0-0-puppeteer-puppeteer&quot;&gt;Release v10.0.0 · puppeteer/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/puppeteer/puppeteer/releases/tag/v10.0.0&quot; title=&quot;Release v10.0.0 · puppeteer/puppeteer&quot;&gt;github.com/puppeteer/puppeteer/releases/tag/v10.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;puppeteer 10.0.0リリース。&lt;br&gt;
Node.js 10のサポート終了、起動してから最初のページのロード待ちをするかどうかを決める&lt;code&gt;waitForInitialPage&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-0-0-googlechrome-lighthouse&quot;&gt;Release v8.0.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v8.0.0&quot; title=&quot;Release v8.0.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v8.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse 8.0.0リリース。&lt;br&gt;
パフォーマンススコアの計算式の変更、レポートをメトリクス別にフィルターできるように、&lt;code&gt;csp-xss&lt;/code&gt;のAuditの追加など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/blob/master/docs/v8-perf-faq.md&quot; title=&quot;lighthouse/v8-perf-faq.md at master · GoogleChrome/lighthouse&quot;&gt;lighthouse/v8-perf-faq.md at master · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-13-0-0-electron-blog&quot;&gt;Electron 13.0.0 | Electron Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-13-0&quot; title=&quot;Electron 13.0.0 | Electron Blog&quot;&gt;www.electronjs.org/blog/electron-13-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 13.0.0リリース。&lt;br&gt;
Chrome 91、Node.js 14.16.0、V8 9.1へアップデート。&lt;br&gt;
&lt;code&gt;process.contextIsolated&lt;/code&gt;、&lt;code&gt;session.storagePat&lt;/code&gt;、&lt;code&gt;process.contextId&lt;/code&gt;の追加。&lt;br&gt;
WebContentsの&lt;code&gt;new-window&lt;/code&gt;イベントがDeprecatedとなり&lt;code&gt;webContents.setWindowOpenHandler()&lt;/code&gt;を推奨するようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;looking-fine-with-firefox-89-mozilla-hacks-the-web-developer-blog&quot;&gt;Looking fine with Firefox 89 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/06/looking-fine-with-firefox-89/&quot; title=&quot;Looking fine with Firefox 89 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/06/looking-fine-with-firefox-89/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 89リリース。&lt;br&gt;
Media Queryの&lt;code&gt;forced-colors&lt;/code&gt;、フォントロード時の視差を調整する&lt;code&gt;line-gap-override&lt;/code&gt;/&lt;code&gt;ascent-override&lt;/code&gt;/&lt;code&gt;descent-override&lt;/code&gt;の実装。&lt;br&gt;
Top-level &lt;code&gt;await&lt;/code&gt;をデフォルトで有効化、64bitマシンでArrayBufferが2GB以上のサイズを扱えるように、&lt;code&gt;PerformanceEventTiming&lt;/code&gt;のサポートなど。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/89&quot; title=&quot;Firefox 89 for developers - Mozilla | MDN&quot;&gt;Firefox 89 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/89.0/releasenotes/&quot; title=&quot;Firefox 89.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 89.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-92-web-apps-as-file-handlers-new-javascript-features-and-more&quot;&gt;Chromium Blog: Chrome 92: Web Apps as File Handlers, New JavaScript Features, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/06/chrome-92-web-apps-as-file-handlers-new.html&quot; title=&quot;Chromium Blog: Chrome 92: Web Apps as File Handlers, New JavaScript Features, and More&quot;&gt;blog.chromium.org/2021/06/chrome-92-web-apps-as-file-handlers-new.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 92 betaリリース。&lt;br&gt;
Origin TrialとしてFile Handling API、Shared Element Transitions。&lt;br&gt;
&lt;code&gt;@font-face&lt;/code&gt;の&lt;code&gt;size-adjust&lt;/code&gt;、V8 9.2へのアップデート、SharedArrayBuffersがCross Origin Isolateされたページに限定されるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v9-0-0-mochajs-mocha&quot;&gt;Release v9.0.0 · mochajs/mocha&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/releases/tag/v9.0.0&quot; title=&quot;Release v9.0.0 · mochajs/mocha&quot;&gt;github.com/mochajs/mocha/releases/tag/v9.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mocha 9.0.0リリース。&lt;br&gt;
Node.js 10のサポート終了、ESMサポート、&lt;code&gt;--dry-run&lt;/code&gt;オプションのサポート。&lt;br&gt;
非推奨だった&lt;code&gt;utils.lookupFiles()&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-3-0-current-node-js&quot;&gt;Node v16.3.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.3.0/&quot; title=&quot;Node v16.3.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.3.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v16.3.0リリース。&lt;br&gt;
npm 7.15.1へのアップデートでnpmのworkspaceコマンドが色々追加された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-1-0-pluto-vuejs-vue-next&quot;&gt;Release v3.1.0 Pluto · vuejs/vue-next&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-next/releases/tag/v3.1.0&quot; title=&quot;Release v3.1.0 Pluto · vuejs/vue-next&quot;&gt;github.com/vuejs/vue-next/releases/tag/v3.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 3.1.0リリース。&lt;br&gt;
Vue 2からのMigration Buildとして&lt;code&gt;@vue/compat&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;app.config.isCustomElement&lt;/code&gt;とコンポーネントの&lt;code&gt;delimiters&lt;/code&gt;オプションを非推奨化してコンポーネントの&lt;code&gt;compilerOptions&lt;/code&gt;オプションをサポート。&lt;br&gt;
&lt;code&gt;v-is&lt;/code&gt;を非推奨化して&lt;code&gt;is=&amp;quot;vue:xxx&amp;quot;&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-92-chrome-developers&quot;&gt;What&amp;#039;s New In DevTools (Chrome 92) - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/new-in-devtools-92/&quot; title=&quot;What&amp;amp;#039;s New In DevTools (Chrome 92) - Chrome Developers&quot;&gt;developer.chrome.com/blog/new-in-devtools-92/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 92のDevToolsの変更点について。&lt;br&gt;
CSS gridエディタ、REPL内で&lt;code&gt;const&lt;/code&gt;の再定義ができるように、Source order viewerの追加。&lt;br&gt;
CORSのエラーメッセージの改善、NetworkのフィルターにWasm typeを追加、UA Client Hintの対応。&lt;br&gt;
ExperimentsとしてChrome DevTools Protocolを見るProtocol Monitor、Puppeteer Recorderの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ui-security-thinking-outside-the-viewport-microsoft-browser-vulnerability-research&quot;&gt;UI Security - Thinking Outside the Viewport | Microsoft Browser Vulnerability Research&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://microsoftedge.github.io/edgevr/posts/ui-security-thinking-outside-the-viewport/&quot; title=&quot;UI Security - Thinking Outside the Viewport | Microsoft Browser Vulnerability Research&quot;&gt;microsoftedge.github.io/edgevr/posts/ui-security-thinking-outside-the-viewport/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザUIのセキュリティバグを例に、UIにおけるセキュリティバグをどのようにチェックするかについて解説している記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;making-javascript-run-fast-on-webassembly-bytecode-alliance&quot;&gt;Making JavaScript run fast on WebAssembly | Bytecode Alliance&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bytecodealliance.org/articles/making-javascript-run-fast-on-webassembly&quot; title=&quot;Making JavaScript run fast on WebAssembly | Bytecode Alliance&quot;&gt;bytecodealliance.org/articles/making-javascript-run-fast-on-webassembly&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Wasmで動くJavaScriptエンジンを作る話。&lt;br&gt;
WasmをサンドボックスとしてJavaScriptを実行できる点と、JavaScriptエンジンの初期化とRuntimeの高速化の手法について書かれている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bytecodealliance/wizer&quot; title=&quot;bytecodealliance/wizer: The WebAssembly Pre-Initializer&quot;&gt;bytecodealliance/wizer: The WebAssembly Pre-Initializer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-introduction-to-webassembly-for-javascript-developers&quot;&gt;An introduction to WebAssembly for JavaScript Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pascalpares.appspot.ovh/webassembly-for-javascript-developers/&quot; title=&quot;An introduction to WebAssembly for JavaScript Developers&quot;&gt;pascalpares.appspot.ovh/webassembly-for-javascript-developers/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyのJavaScript APIについての解説記事。&lt;br&gt;
Wasmファイルのロード、コンパイル、WasmからJSのコールバック関数の呼び出し、Dynamic Link、グローバル変数、文字列の渡し方、Shared Memory Bufferなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progfay-benefit-from-end-of-ie-list-of-apis-that-will-be-available-due-to-ie-termination&quot;&gt;progfay/benefit-from-end-of-ie: List of APIs that will be available due to IE termination&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/progfay/benefit-from-end-of-ie&quot; title=&quot;progfay/benefit-from-end-of-ie: List of APIs that will be available due to IE termination&quot;&gt;github.com/progfay/benefit-from-end-of-ie&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;IE&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;IEのみがサポートしていないAPIをまとめたもの。&lt;br&gt;
MDNのデータをベースにHTML、JS、CSS、SVGのAPIを一覧できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-api-table&quot;&gt;Node.js API Table&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs-api-table.netlify.app/&quot; title=&quot;Node.js API Table&quot;&gt;nodejs-api-table.netlify.app/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのモジュールやAPIがどのバージョンで追加されたのかを一覧できるサイト。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/sosukesuzuki/articles/f00bc24600f2d8&quot; title=&quot;Next.js で Node.js の API がいつ入ったのかわかる表を作る&quot;&gt;Next.js で Node.js の API がいつ入ったのかわかる表を作る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devongovett-dprint-node-a-node-api-for-the-dprint-typescript-and-javascript-code-formatter&quot;&gt;devongovett/dprint-node: A node API for the dprint TypeScript and JavaScript code formatter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/devongovett/dprint-node&quot; title=&quot;devongovett/dprint-node: A node API for the dprint TypeScript and JavaScript code formatter&quot;&gt;github.com/devongovett/dprint-node&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rustで書かれたdprintを使ったコードフォーマッター&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;htmlplus-core-htmlplus-is-a-native-framework-less-and-lightweight-library-that-is-purely-developed-with-javascript-all-htmlplus-components-are-customizable-and-configurable&quot;&gt;htmlplus/core: HTMLPLUS is a native, framework-less, and lightweight library that is purely developed with Javascript. All HTMLPLUS components are customizable and configurable.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/htmlplus/core&quot; title=&quot;htmlplus/core: HTMLPLUS is a native, framework-less, and lightweight library that is purely developed with Javascript. All HTMLPLUS components are customizable and configurable.&quot;&gt;github.com/htmlplus/core&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsで作られたUIライブラリ。&lt;br&gt;
ReactとVue向けのバインディングも提供している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kawmra-typist-json-a-simple-runtime-json-type-checker&quot;&gt;kawmra/typist-json: A simple runtime JSON type checker.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kawmra/typist-json&quot; title=&quot;kawmra/typist-json: A simple runtime JSON type checker.&quot;&gt;github.com/kawmra/typist-json&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;スキーマを定義するビルダー関数とチェッカーライブラリ。&lt;br&gt;
定義したスキーマをTypeScriptの型として利用できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/kawmra/articles/0aad8dca56f1da&quot; title=&quot;TypeScript 向けの軽量ランタイム JSON 型チェッカーを作った&quot;&gt;TypeScript 向けの軽量ランタイム JSON 型チェッカーを作った&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;evandrolg-ts-audio-ts-audio-is-an-agnostic-library-that-makes-it-easy-to-work-with-audiocontext-and-create-audio-playlists-in-the-browser&quot;&gt;EvandroLG/ts-audio: ts-audio is an agnostic library that makes it easy to work with AudioContext and create audio playlists in the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/EvandroLG/ts-audio&quot; title=&quot;EvandroLG/ts-audio: ts-audio is an agnostic library that makes it easy to work with AudioContext and create audio playlists in the browser&quot;&gt;github.com/EvandroLG/ts-audio&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AudioContext APIを使った音楽再生ライブラリ。&lt;br&gt;
複数の音声の連続再生などをサポートしている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testy-testyts-modern-typescript-testing-framework&quot;&gt;Testy/TestyTs: ✔️ Modern TypeScript testing framework.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Testy/TestyTs&quot; title=&quot;Testy/TestyTs: ✔️ Modern TypeScript testing framework.&quot;&gt;github.com/Testy/TestyTs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Decoratorを使ったTypeScriptテストフレームワーク&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 08 Jun 2021 11:48:58 +0900</pubDate>
        <link>https://jser.info/2021/06/08/lighthouse-8.0.0-vue-3.1vuecompat-mocha-v9.0.0/</link>
        <guid isPermaLink="true">https://jser.info/2021/06/08/lighthouse-8.0.0-vue-3.1vuecompat-mocha-v9.0.0/</guid>
        
        <category>Chrome</category>
        
        <category>node.js</category>
        
        <category>TypeScript</category>
        
        <category>browser</category>
        
        <category>WebAssembly</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-06-01のJS: Jest 27、vanilla-extract 1.0.0、Learn CSS</title>
        <description>&lt;p&gt;JSer.info #542 - Jest 27.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/jest/releases/tag/v27.0.0&quot;&gt;Release 27.0.0 · Facebook/jest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jestjs.io/blog/2021/05/25/jest-27&quot;&gt;Jest 27: New Defaults for Jest, 2021 edition ⏩ · Jest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jest 27.0.0では今までのデフォルトが大きく変更されるリリースとなっています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;testEnvironment&lt;/code&gt;のデフォルトを&lt;code&gt;jsdom&lt;/code&gt;から&lt;code&gt;node&lt;/code&gt;へ変更、&lt;code&gt;jest-circus&lt;/code&gt;のデフォルト化、fake timersのデフォルトを&lt;code&gt;@sinonjs/fake-timers&lt;/code&gt;ベースの&lt;code&gt;modern&lt;/code&gt;にしています。&lt;br&gt;
機能追加として、失敗したテストをインタラクティブに実行できるように、inline snapshotsをprettierの依存なく実行できるようになっています。&lt;br&gt;
また、&lt;code&gt;done&lt;/code&gt;の複数回呼び出しをエラーとしたり、テストケースでPromiseを返しつつ&lt;code&gt;done&lt;/code&gt;を呼ぶことを禁止したり、TypeScriptの型を厳密化するといった変更も含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;CSS Variablesが利用できないといったCSS Modulesの問題点の解決と型安全なCSS in JSを目指すvanilla-extract 1.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vanilla-extract.style/&quot;&gt;vanilla-extract — Zero-runtime Stylesheets-in-TypeScript.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;🧁🎉 Announcing vanilla-extract v1.0!&lt;br&gt;&lt;br&gt;💪 Locally scoped, type-safe styles, variables + themes.&lt;br&gt;🦄 Minimal abstraction over CSS.&lt;br&gt;🛠 Framework agnostic, w/ integrations for webpack, esbuild, Vite + Snowpack.&lt;br&gt;✅ Now stable + production ready.&lt;br&gt;&lt;br&gt;🙇‍♂️ Enjoy!&lt;a href=&quot;https://t.co/Ejaf4anfbj&quot;&gt;https://t.co/Ejaf4anfbj&lt;/a&gt;&lt;/p&gt;&amp;mdash; 🧁🍨 Mark Dalgleish (@markdalgleish) &lt;a href=&quot;https://twitter.com/markdalgleish/status/1398158090294292482?ref_src=twsrc%5Etfw&quot;&gt;May 28, 2021&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; 

&lt;p&gt;vanilla-extractは&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS Modules&lt;/a&gt;の作者の一人でもある&lt;a href=&quot;https://twitter.com/markdalgleish&quot;&gt;Mark Dalgleish&lt;/a&gt;が中心に作成されているCSS Modules-in-TypeScriptなCSSフレームワークです。&lt;br&gt;
TypeScriptでスタイルをJSとして&lt;code&gt;.css.ts&lt;/code&gt;に書いて&lt;code&gt;class&lt;/code&gt;属性に指定したものをコンパイルすると、CSSファイルを生成するフレームワークに依存しないツールキットとなっています。&lt;/p&gt;

&lt;p&gt;直近で様々なCSS in JSが登場しているので、次の記事がCSSへのアプローチをグループ分けしてまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/a-thorough-analysis-of-css-in-js/&quot;&gt;A Thorough Analysis of CSS-in-JS | CSS-Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/andreipfeiffer/css-in-js/issues/8&quot;&gt;Libraries to look out for · Issue #8 · andreipfeiffer/css-in-js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;web.devで&lt;a href=&quot;https://web.dev/learn/css/&quot;&gt;Learn CSS&lt;/a&gt;というCSSについて一から学べるCSSのチュートリアル講座が公開されています。&lt;br&gt;
Box Model、セレクタ、詳細度、CSSの単位などの基本的な概念から、GridやFlexboxなどのレイアウト、ColorやmarginなどのCSSプロパティの解説、擬似クラスや疑似要素などCSS全般について幅広く解説されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinon-changelog-md-at-master-sinonjs-sinon&quot;&gt;sinon/CHANGELOG.md at master · sinonjs/sinon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon/blob/master/CHANGELOG.md#1110--2021-05-25&quot; title=&quot;sinon/CHANGELOG.md at master · sinonjs/sinon&quot;&gt;github.com/sinonjs/sinon/blob/master/CHANGELOG.md#1110--2021-05-25&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;sinon.js 11.1.0リリース。&lt;br&gt;
PromiseをFakeする&lt;code&gt;sinon.promise()&lt;/code&gt;の実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-27-new-defaults-for-jest-2021-edition-jest&quot;&gt;Jest 27: New Defaults for Jest, 2021 edition ⏩ · Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jestjs.io/blog/2021/05/25/jest-27&quot; title=&quot;Jest 27: New Defaults for Jest, 2021 edition ⏩ · Jest&quot;&gt;jestjs.io/blog/2021/05/25/jest-27&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest 27リリース。&lt;br&gt;
デフォルトが大きく変わるリリースとなっていて、&lt;br&gt;
&lt;code&gt;testEnvironment&lt;/code&gt;のデフォルトを&lt;code&gt;jsdom&lt;/code&gt;から&lt;code&gt;node&lt;/code&gt;へ変更、&lt;code&gt;jest-circus&lt;/code&gt;のデフォルト化、fake timersのデフォルトを&lt;code&gt;@sinonjs/fake-timers&lt;/code&gt;ベースの&lt;code&gt;modern&lt;/code&gt;に変更している。&lt;br&gt;
機能追加として、失敗したテストをインタラクティブに実行できるように、inline snapshotsをprettierの依存なく実行できるようになど。&lt;br&gt;
また、&lt;code&gt;done&lt;/code&gt;の複数回呼び出しをエラーとしたり、Promiseを返すのと&lt;code&gt;done&lt;/code&gt;の混在を禁止したり、TypeScriptの型を厳密化するといった変更も含まれる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/jest/releases/tag/v27.0.0&quot; title=&quot;Release 27.0.0 · facebook/jest&quot;&gt;Release 27.0.0 · facebook/jest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-3-typescript&quot;&gt;Announcing TypeScript 4.3 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3/&quot; title=&quot;Announcing TypeScript 4.3 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.3リリース&lt;br&gt;
setterにgetterとは異なる型を指定できるように、&lt;code&gt;override&lt;/code&gt;キーワードの追加、Template String Typeの改善。&lt;br&gt;
Private Class Elements(fields/methods/accessors)のサポート、&lt;code&gt;static&lt;/code&gt; Index Signatureのサポート。&lt;br&gt;
&lt;code&gt;ConstructorParameters&lt;/code&gt;がAbstract classをサポート、Genericsにおける型の絞り込みの改善、Promiseオブジェクトを条件式に渡してしまうミスのチェックを追加。&lt;br&gt;
その他には、&lt;code&gt;.tsbuildinfo&lt;/code&gt;のサイズ改善、watch時の初回ビルドの改善など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-vendure-v1-0-vendure-e-commerce&quot;&gt;Announcing Vendure v1.0 | Vendure E-commerce&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.vendure.io/blog/2021/05/announcing-vendure-v1.0/&quot; title=&quot;Announcing Vendure v1.0 | Vendure E-commerce&quot;&gt;www.vendure.io/blog/2021/05/announcing-vendure-v1.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQL/TypeScriptベースのeコマースフレームワークであるVendure v1.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vendure-ecommerce/vendure&quot; title=&quot;vendure-ecommerce/vendure: A headless GraphQL ecommerce framework for the modern web&quot;&gt;vendure-ecommerce/vendure: A headless GraphQL ecommerce framework for the modern web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimized-images-for-nuxt&quot;&gt;Optimized images for Nuxt&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://image.nuxtjs.org/&quot; title=&quot;Optimized images for Nuxt&quot;&gt;image.nuxtjs.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt.js向けの画像最適化モジュール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2021-05-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2021-05 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/05/29/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2021-05 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2021/05/29/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年5月のTC39ミーティングでStageの変更があったProposalのまとめ。&lt;br&gt;
Top-Level awaitとRegExp Match IndicesがStage 4となりES2022に含まれることが決まった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-release-2-13-0&quot;&gt;New Release: 2.13.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jshint.com/blog/2021-05-30/release-2-13-0/&quot; title=&quot;New Release: 2.13.0&quot;&gt;jshint.com/blog/2021-05-30/release-2-13-0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSHint 2.13.0リリース。&lt;br&gt;
&lt;code&gt;export * as ns from&lt;/code&gt;、&lt;code&gt;import.meta&lt;/code&gt;、Dynamic &lt;code&gt;import()&lt;/code&gt;、Optional Chaining、Nullish Coalescingのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vanilla-extract-zero-runtime-stylesheets-in-typescript&quot;&gt;vanilla-extract — Zero-runtime Stylesheets-in-TypeScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vanilla-extract.style/&quot; title=&quot;vanilla-extract — Zero-runtime Stylesheets-in-TypeScript.&quot;&gt;vanilla-extract.style/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;vanilla-extract v1.0リリース。&lt;br&gt;
TypeScriptでスタイルをJSとして&lt;code&gt;.css.ts&lt;/code&gt;に書いて&lt;code&gt;class&lt;/code&gt;属性に指定したものをコンパイルすると、CSSファイルを生成するフレームワークに依存しないツールキット。&lt;br&gt;
ビルド時に静的に展開されるAPIと実行時に動作するDynamic API、webpackやViteなどの各種ツールに対応したプラグインが用意されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/markdalgleish/status/1398158090294292482&quot; title=&quot;🧁🍨 Mark Dalgleish on Twitter: &amp;amp;amp;amp;quot;🧁🎉 Announcing vanilla-extract v1.0! 💪 Locally scoped, type-safe styles, variables + themes. 🦄 Minimal abstraction over CSS. 🛠 Framework agnostic, w/ integrations for webpack, esbuild, Vite + Snowpack. ✅ Now stable + production ready. 🙇‍♂️ Enjoy! https://t.co/Ejaf4anfbj&amp;amp;amp;amp;quot; / Twitter&quot;&gt;🧁🍨 Mark Dalgleish on Twitter: &amp;amp;quot;🧁🎉 Announcing vanilla-extract v1.0! 💪 Locally scoped, type-safe styles, variables + themes. 🦄 Minimal abstraction over CSS. 🛠 Framework agnostic, w/ integrations for webpack, esbuild, Vite + Snowpack. ✅ Now stable + production ready. 🙇‍♂️ Enjoy! https://t.co/Ejaf4anfbj&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lit-2-0-meet-lit-all-over-again-lit&quot;&gt;Lit 2.0: Meet Lit, all over again! – Lit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://lit.dev/blog/2021-04-21-lit-2.0-meet-lit-all-over-again/&quot; title=&quot;Lit 2.0: Meet Lit, all over again! – Lit&quot;&gt;lit.dev/blog/2021-04-21-lit-2.0-meet-lit-all-over-again/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lit 2.0 RCリリース。&lt;br&gt;
&lt;code&gt;lit-html&lt;/code&gt;と&lt;code&gt;LitELement&lt;/code&gt;を一つにまとめて&lt;code&gt;lit&lt;/code&gt;パッケージの公開、ウェブサイトの刷新が行われている。&lt;br&gt;
ファイルサイズやパフォーマンスの改善、SSRの対応などが含まれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=f1j7b696L-E&quot; title=&quot;Lit Launch Event - YouTube&quot;&gt;Lit Launch Event - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/takanorip/articles/640f9fe9c6c8ca&quot; title=&quot;Introducing &amp;amp;amp;amp;quot;Lit&amp;amp;amp;amp;quot; for Web Components&quot;&gt;Introducing &amp;amp;quot;Lit&amp;amp;quot; for Web Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;5-steps-to-faster-web-fonts-iain-bean&quot;&gt;5 steps to faster web fonts /// Iain Bean&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://iainbean.com/posts/2021/5-steps-to-faster-web-fonts/&quot; title=&quot;5 steps to faster web fonts /// Iain Bean&quot;&gt;iainbean.com/posts/2021/5-steps-to-faster-web-fonts/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Fontsのローディングについての連載。&lt;br&gt;
&lt;code&gt;font-display&lt;/code&gt;でのテキストの表示と切り替わるタイミングのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learn-css&quot;&gt;Learn CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/learn/css/&quot; title=&quot;Learn CSS&quot;&gt;web.dev/learn/css/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSについて一通り扱うチュートリアル講座。&lt;br&gt;
Box Model、セレクタ、詳細度、CSSの単位などの基本的な概念から、GridやFlexboxなどのレイアウト、ColorやmarginなどのCSSプロパティの解説、擬似クラスや疑似要素などを扱う&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;xqq-mpegts-js-html5-mpeg2-ts-stream-player&quot;&gt;xqq/mpegts.js: HTML5 MPEG2-TS Stream Player&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/xqq/mpegts.js&quot; title=&quot;xqq/mpegts.js: HTML5 MPEG2-TS Stream Player&quot;&gt;github.com/xqq/mpegts.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;flv.jsをベースにしたMPEG-2 TS steram playerライブラリ。&lt;br&gt;
HTTPとWebSocketを使ったMPEG-2 TS streamの再生、低遅延、低スペックマシンでも再生できることを目的にしている。&lt;br&gt;
flv.jsベースであるため、FLV containerもサポートしている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wwwtyro-candygraph-fast-by-default-flexible-2d-plotting-library&quot;&gt;wwwtyro/candygraph: Fast by default, flexible 2D plotting library.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wwwtyro/candygraph&quot; title=&quot;wwwtyro/candygraph: Fast by default, flexible 2D plotting library.&quot;&gt;github.com/wwwtyro/candygraph&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;graphic&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;パフォーマンスに目的を置いた2Dグラフ描画ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lume-autolayout-apples-auto-layout-and-visual-format-language-for-javascript-using-cassowary-constraints&quot;&gt;lume/autolayout: Apple&amp;#039;s Auto Layout and Visual Format Language for JavaScript (using cassowary constraints)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lume/autolayout&quot; title=&quot;lume/autolayout: Apple&amp;amp;#039;s Auto Layout and Visual Format Language for JavaScript (using cassowary constraints)&quot;&gt;github.com/lume/autolayout&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Auto LayoutとVisual Format Languageの実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;plantain-00-type-coverage-a-cli-tool-to-check-type-coverage-for-typescript-code&quot;&gt;plantain-00/type-coverage: A CLI tool to check type coverage for typescript code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/plantain-00/type-coverage&quot; title=&quot;plantain-00/type-coverage: A CLI tool to check type coverage for typescript code&quot;&gt;github.com/plantain-00/type-coverage&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの型カバレッジを出すツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webassembly-the-definitive-guide&quot;&gt;WebAssembly: The Definitive Guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/webassembly-the-definitive/9781492089834/&quot; title=&quot;WebAssembly: The Definitive Guide&quot;&gt;learning.oreilly.com/library/view/webassembly-the-definitive/9781492089834/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年12月発売予定&lt;br&gt;
WebAsseblyについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 31 May 2021 23:26:57 +0900</pubDate>
        <link>https://jser.info/2021/05/31/jest-27-vanilla-extract-1.0.0-learn-css/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/31/jest-27-vanilla-extract-1.0.0-learn-css/</guid>
        
        <category>TypeScript</category>
        
        <category>CSS</category>
        
        <category>Tools</category>
        
        <category>testing</category>
        
        <category>node.js</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-05-25のJS: IEの単体アプリとしてのサポート終了、WebContainers、User-Agent Client Hints</title>
        <description>&lt;p&gt;JSer.info #541 - Windows 10においてのInternet Explorer(IE)の単体のアプリとしてサポートが2022年6月15日で終了されることがアナウンスされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/&quot;&gt;The future of Internet Explorer on Windows 10 is in Microsoft Edge | Windows Experience Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/japan/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/&quot;&gt;Internet Explorer は Microsoft Edge へ – Windows 10 の Internet Explorer 11 デスクトップアプリは 2022 年 6 月 15 日にサポート終了 - Windows Blog for Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/japan/2021/05/19/internet-explorer-11-desktop-app-retirement-faq/&quot;&gt;「Internet Explorer 11 デスクトップ アプリケーションのサポート終了」の発表に関連する FAQ - Windows Blog for Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2022年6月15日以降は、IEのデスクトップアプリケーション(&lt;code&gt;iexplore.exe&lt;/code&gt;)を利用しようとするとMicrosoft Edge(MSEdge)が代わりに起動します。&lt;br&gt;
MSEdgeにはIEモードが搭載されており、MSEdgeの設定を変更することでIEのレンダリングエンジンであるMSHTML (Trident)が使えるようになるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/ja-jp/office/microsoft-edge-%e3%81%ae-internet-explorer-%e3%83%a2%e3%83%bc%e3%83%89-6604162f-e38a-48b2-acd2-682dbac6f0de?ui=ja-JP&amp;rs=ja-JP&amp;ad=JP&quot;&gt;Microsoft Edge の Internet Explorer モード - Office サポート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、このIEモードではMSEdgeのF12開発者ツールと接続できないため、代わりに&lt;code&gt;IEChooser.exe&lt;/code&gt;を使ったデバッグができるようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ie-mode-faq/&quot;&gt;IE モードのよくあるご質問 | Japan Developer Support Internet Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このIEモード(MSHTML)のサポート自体は今回のアナウンスとは関係なく、 2029年までサポートされる予定となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;WebContainersというブラウザ上でNode.jsのランタイムを動かす仕組みがstackblitzで公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.stackblitz.com/posts/introducing-webcontainers/&quot;&gt;Introducing WebContainers: Run Node.js natively in your browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.jsのランタイムをブラウザで動かし、ブラウザ自体をSandboxとしてNode.jsのコードをセキュアに実行するための仕組みとなっています。あくまでブラウザの中で動かす仕組みであるため、ネイティブアドオンは対応せずCORSなどブラウザの制約の中で動作します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stackblitz/webcontainer-core&quot;&gt;stackblitz/webcontainer-core&lt;/a&gt;ではキーコンセプトが解説されています。&lt;br&gt;
Virtual FSとNetworkingを実装し、各プロセスをWorkerとして起動してメッセージングすることでマルチプロセスのサポートしています。POSIXなシェルとしてjshという実装と、npm/yarnクライアントとしてturboという実装を持っています。&lt;/p&gt;

&lt;p&gt;現在はオープンソースではありませんが、将来的に&lt;a href=&quot;https://news.ycombinator.com/item?id=27225150&quot;&gt;コア部分はオープンソースとして公開&lt;/a&gt;する予定となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ChromeにおけるUA文字列を扱う &lt;code&gt;navigator.userAgent&lt;/code&gt;, &lt;code&gt;navigator.appVersion&lt;/code&gt;, &lt;code&gt;navigator.platform&lt;/code&gt; を非推奨とするロードマップが更新されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/05/update-on-user-agent-string-reduction.html&quot;&gt;Chromium Blog: Update on User-Agent String Reduction in Chrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chrome 92で非推奨の警告をだすようになり、段階的にUA文字列から情報を削り、UA文字列化を固定化していく予定のロードマップが公開されています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;navigator.userAgent&lt;/code&gt;の代替となる仕組みとして、UA Client Hintsがありロードマップの記事とあわせて、UA Client Hintsへの移行方法についての記事も公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/migrate-to-ua-ch/&quot;&gt;Migrate to User-Agent Client Hints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/uach-retrofill&quot;&gt;GoogleChromeLabs/uach-retrofill: This snippet illustrates how to reconstruct the legacy navigator.userAgent string value from the modern navigator.userAgentData values.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;recoil-0-3-0-recoil&quot;&gt;Recoil 0.3.0 | Recoil&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://recoiljs.org/blog/2021/05/14/0.3.0-released/&quot; title=&quot;Recoil 0.3.0 | Recoil&quot;&gt;recoiljs.org/blog/2021/05/14/0.3.0-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Recoil 0.3.0リリース。&lt;br&gt;
RecoilRootに&lt;code&gt;override&lt;/code&gt;オプションの追加、selectorに&lt;code&gt;GetCallback&lt;/code&gt;を追加。&lt;br&gt;
次の0.4で&lt;code&gt;snapshot.retain()&lt;/code&gt;していないsnapshotを使うと例外が発生するようになる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge-windows-experience-blog&quot;&gt;The future of Internet Explorer on Windows 10 is in Microsoft Edge | Windows Experience Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/&quot; title=&quot;The future of Internet Explorer on Windows 10 is in Microsoft Edge | Windows Experience Blog&quot;&gt;blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;IE&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;IE11のデスクトップアプリケーションとしてのサポートは2022年6月15日で終了し、MSEdgeのIEモードで引き続き2029年までサポートする予定。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/japan/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/&quot; title=&quot;Internet Explorer は Microsoft Edge へ – Windows 10 の Internet Explorer 11 デスクトップアプリは 2022 年 6 月 15 日にサポート終了 - Windows Blog for Japan&quot;&gt;Internet Explorer は Microsoft Edge へ – Windows 10 の Internet Explorer 11 デスクトップアプリは 2022 年 6 月 15 日にサポート終了 - Windows Blog for Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/japan/2021/05/19/internet-explorer-11-desktop-app-retirement-faq/&quot; title=&quot;「Internet Explorer 11 デスクトップ アプリケーションのサポート終了」の発表に関連する FAQ - Windows Blog for Japan&quot;&gt;「Internet Explorer 11 デスクトップ アプリケーションのサポート終了」の発表に関連する FAQ - Windows Blog for Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-5-0-googlechrome-lighthouse&quot;&gt;Release v7.5.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v7.5.0&quot; title=&quot;Release v7.5.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v7.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse 7.5.0リリース。&lt;br&gt;
Source Mapベースのファイルツリーを可視化するTreemap表示の追加、新しいCLSへの対応を追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-2-0-current-node-js&quot;&gt;Node v16.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.2.0/&quot; title=&quot;Node v16.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.2.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v16.2.0リリース。&lt;br&gt;
&lt;code&gt;import.meta.resolve&lt;/code&gt;が&lt;code&gt;URL&lt;/code&gt;オブジェクトをサポート、Workerが作成された際にtriggerされる&lt;code&gt;worker&lt;/code&gt;イベントを&lt;code&gt;process&lt;/code&gt;に追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v10-0-0-typestrong-ts-node&quot;&gt;Release v10.0.0 · TypeStrong/ts-node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/TypeStrong/ts-node/releases/tag/v10.0.0&quot; title=&quot;Release v10.0.0 · TypeStrong/ts-node&quot;&gt;github.com/TypeStrong/ts-node/releases/tag/v10.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのコンパイルをRuntime時に行うts-node 10.0.0リリース。&lt;br&gt;
&lt;code&gt;--script-mode&lt;/code&gt;の挙動をデフォルト化し、古い挙動を再現する&lt;code&gt;--cwd-mode&lt;/code&gt;を追加。&lt;br&gt;
Node.js 10のサポート終了、&lt;code&gt;--show-config&lt;/code&gt;の追加、&lt;code&gt;--transpiler&lt;/code&gt;オプションでSWCを使ったtrasnpileに対応など。&lt;br&gt;
またウェブサイトが更新されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://typestrong.org/ts-node/docs/transpilers/&quot; title=&quot;Third-party transpilers | ts-node&quot;&gt;Third-party transpilers | ts-node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://typestrong.org/ts-node/&quot; title=&quot;ts-node | ts-node&quot;&gt;ts-node | ts-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-update-on-user-agent-string-reduction-in-chrome&quot;&gt;Chromium Blog: Update on User-Agent String Reduction in Chrome&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/05/update-on-user-agent-string-reduction.html&quot; title=&quot;Chromium Blog: Update on User-Agent String Reduction in Chrome&quot;&gt;blog.chromium.org/2021/05/update-on-user-agent-string-reduction.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ChromeのUser-Agent固定化のロードマップ。&lt;br&gt;
Chrome 92で&lt;code&gt;navigator.userAgent&lt;/code&gt;などのdeprecated化、reduced UA stringをオプトインで導入、デフォルト化など7段階でのマイグレーションフェーズについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromium.org/updates/ua-reduction&quot; title=&quot;User-Agent Reduction - The Chromium Projects&quot;&gt;User-Agent Reduction - The Chromium Projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-firefoxs-new-site-isolation-security-architecture-mozilla-hacks-the-web-developer-blog&quot;&gt;Introducing Firefox&amp;#039;s new Site Isolation Security Architecture - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/05/introducing-firefox-new-site-isolation-security-architecture/&quot; title=&quot;Introducing Firefox&amp;amp;#039;s new Site Isolation Security Architecture - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/05/introducing-firefox-new-site-isolation-security-architecture/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FirefoxのSite Isolationのアーキテクチャについての記事。&lt;br&gt;
eTLDベースのSiteごとにプロセス分け、メモリを相互に分離した状態でリソースをロードすることで、Spectreなどのサイドチャネル攻撃を防止する。&lt;br&gt;
また、サブフレームもトップレベルが異なるSiteなら、別プロセスで読むこむようになっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-humble-img-element-and-core-web-vitals-smashing-magazine&quot;&gt;The Humble &amp;lt;img&amp;gt; Element And Core Web Vitals — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/humble-img-element-core-web-vitals/&quot; title=&quot;The Humble &amp;amp;lt;img&amp;amp;gt; Element And Core Web Vitals — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/04/humble-img-element-core-web-vitals/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;についてLCP、CLS、FIDのメトリクスに関する最適化の仕方についてのガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-webcontainers-run-node-js-natively-in-your-browser&quot;&gt;Introducing WebContainers: Run Node.js natively in your browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.stackblitz.com/posts/introducing-webcontainers/&quot; title=&quot;Introducing WebContainers: Run Node.js natively in your browser&quot;&gt;blog.stackblitz.com/posts/introducing-webcontainers/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsをブラウザで動かすWebContainersについて。&lt;br&gt;
Node.jsのランタイムをブラウザで動かし、ブラウザ自体をSandboxとしてNode.jsのコードをセキュアに実行するための仕組み。&lt;br&gt;
Virtual FSとNetworkingを実装し、各プロセスをWorkerとして起動してメッセージングすることでマルチプロセスのサポートしている。&lt;br&gt;
POSIXなシェルとしてjshという実装と、npm/yarnクライアントとしてturboという実装を持っている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stackblitz/webcontainer-core&quot; title=&quot;stackblitz/webcontainer-core&quot;&gt;stackblitz/webcontainer-core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5F9qH-ea5Qk&quot; title=&quot;AngularAir - StackBlitz with Eric Simons and Dominic Elm - YouTube&quot;&gt;AngularAir - StackBlitz with Eric Simons and Dominic Elm - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrate-to-user-agent-client-hints&quot;&gt;Migrate to User-Agent Client Hints&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/migrate-to-ua-ch/&quot; title=&quot;Migrate to User-Agent Client Hints&quot;&gt;web.dev/migrate-to-ua-ch/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;navigator.userAgent&lt;/code&gt;などがDeprecatedとなり固定化されるため、その代わりとなるUser-Agent Client Hintsについて。&lt;br&gt;
JavaScriptのAPIとしての&lt;code&gt;navigator.userAgentData&lt;/code&gt;と&lt;code&gt;navigator.userAgentData.getHighEntropyValues&lt;/code&gt;。&lt;br&gt;
HTTPヘッダUA Client Hintを扱う&lt;code&gt;Accept-CH&lt;/code&gt;と&lt;code&gt;Sec-CH-UA-*&lt;/code&gt;について。&lt;br&gt;
また、Client HintからレガシーなUA文字列を作成するライブラリについてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/05/update-on-user-agent-string-reduction.html&quot; title=&quot;Chromium Blog: Update on User-Agent String Reduction in Chrome&quot;&gt;Chromium Blog: Update on User-Agent String Reduction in Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/uach-retrofill&quot; title=&quot;GoogleChromeLabs/uach-retrofill: This snippet illustrates how to reconstruct the legacy navigator.userAgent string value from the modern navigator.userAgentData values.&quot;&gt;GoogleChromeLabs/uach-retrofill: This snippet illustrates how to reconstruct the legacy navigator.userAgent string value from the modern navigator.userAgentData values.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;renaming-n-api-to-node-api-this-post-was-contributed-by-the-by-node-js-may-2021-medium&quot;&gt;Renaming N-API to Node-API. This post was contributed by the… | by Node.js | May, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.medium.com/renaming-n-api-to-node-api-27aa8ca30ed8&quot; title=&quot;Renaming N-API to Node-API. This post was contributed by the… | by Node.js | May, 2021 | Medium&quot;&gt;nodejs.medium.com/renaming-n-api-to-node-api-27aa8ca30ed8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのネイティブアドオン用のAPIの名前をN-APIをNode-APIへ変更するという話。&lt;br&gt;
変更のモチベーションについて解説している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.medium.com/renaming-n-api-to-node-api-27aa8ca30ed8&quot; title=&quot;Renaming N-API to Node-API. This post was contributed by the… | by Node.js | May, 2021 | Medium&quot;&gt;Renaming N-API to Node-API. This post was contributed by the… | by Node.js | May, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript&quot;&gt;オリジナルのJavaScriptライブラリを公開しよう&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/yusuke99/books/fcd96342f5cb1b468799&quot; title=&quot;オリジナルのJavaScriptライブラリを公開しよう&quot;&gt;zenn.dev/yusuke99/books/fcd96342f5cb1b468799&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Actions&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのライブラリをnpmに公開するチュートリアル。&lt;br&gt;
ライブラリの実装とテスト、npmへの公開、GitHub ActionsでのCIからpublish、Scoped Packagesについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;argyleink-transition-css-drop-in-css-transitions&quot;&gt;argyleink/transition.css: Drop-in CSS transitions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/argyleink/transition.css&quot; title=&quot;argyleink/transition.css: Drop-in CSS transitions&quot;&gt;github.com/argyleink/transition.css&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;いろいろなCSS transitionを集めたCSSライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dom-events&quot;&gt;DOM Events&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://domevents.dev/&quot; title=&quot;DOM Events&quot;&gt;domevents.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DOMイベントの流れをBubbling、Capture、Passiveなどのオプションごとに動きを可視化できるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rtk-incubator-rtk-query-experimental-data-fetching-and-caching-addon-for-redux-toolkit&quot;&gt;rtk-incubator/rtk-query: Experimental data fetching and caching addon for Redux Toolkit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rtk-incubator/rtk-query&quot; title=&quot;rtk-incubator/rtk-query: Experimental data fetching and caching addon for Redux Toolkit&quot;&gt;github.com/rtk-incubator/rtk-query&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Redux Toolkitを使うデータ取得と状態管理をするQueryライブラリ。&lt;br&gt;
宣言的なAPIの定義、データの取得、キャッシュやリトライ、Prefetching、React Hooks、Open APIから自動生成などに対応している。&lt;br&gt;
将来的にはRedux Toolkitに同梱することを目標にしている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ngneat-variabless-js-css-a-match-made-in-heaven&quot;&gt;ngneat/variabless: JS &amp;amp; CSS - A Match Made in Heaven 💎&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ngneat/variabless&quot; title=&quot;ngneat/variabless: JS &amp;amp;amp; CSS - A Match Made in Heaven 💎&quot;&gt;github.com/ngneat/variabless&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptからCSS Variablesの定義を含んだCSSを生成するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-worker-meets-worker-threads-threads-js&quot;&gt;Web worker meets worker threads - threads.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://threads.js.org/&quot; title=&quot;Web worker meets worker threads - threads.js&quot;&gt;threads.js.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのWeb WorkerとNode.jsの&lt;code&gt;worker_threads&lt;/code&gt;を使ったWorker管理ライブラリ。&lt;br&gt;
async functionとObservablesの対応、thread pools、webpack向けのpluginを持っている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 25 May 2021 11:50:27 +0900</pubDate>
        <link>https://jser.info/2021/05/25/ie-webcontainers-user-agent-client-hints/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/25/ie-webcontainers-user-agent-client-hints/</guid>
        
        <category>node.js</category>
        
        <category>Chrome</category>
        
        <category>Tools</category>
        
        <category>CSS</category>
        
        <category>React</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-05-18のJS: Node.js 14.17.0、TypeScript 4.3 RC(インクリメンタルビルドの改善)、Angular v12</title>
        <description>&lt;p&gt;JSer.info #540 - 現在のLTSの最新版であるNode v14.17.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v14.17.0/&quot;&gt;Node v14.17.0 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node v14.17.0では、Node.js 15.x で追加された機能やモジュールがバックポートされています。&lt;/p&gt;

&lt;p&gt;診断情報を扱う&lt;a href=&quot;https://nodejs.org/api/diagnostics_channel.html&quot;&gt;diagnostics_channel&lt;/a&gt;モジュールの追加、UUID v4を生成する&lt;code&gt;crypto.randomUUID()&lt;/code&gt;が追加されています。&lt;br&gt;
&lt;code&gt;crypto.randomUUID()&lt;/code&gt; はWHATWGで定義されている仕様で、&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/e70b29ae998ed65902cdaeb0b2418a13d0755773&quot;&gt;Chromeにも実装が追加&lt;/a&gt;されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/uuid&quot;&gt;WICG/uuid: UUID V4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5689159362543616&quot;&gt;crypto.randomUUID() - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、&lt;code&gt;--experimental-abortcontroller&lt;/code&gt;の実験フラグ付きですが、&lt;code&gt;AbortController&lt;/code&gt;と&lt;code&gt;AbortSignal&lt;/code&gt;の対応が次のメソッドに追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;child_process.exec&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;child_process.execFile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;child_process.fork&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;child_process.spawn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dgram.createSocket&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;events.on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;events.once&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fs.readFile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fs.watch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http.request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https.request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http2Session.request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Promise版の&lt;code&gt;setImmediate&lt;/code&gt;と&lt;code&gt;setTimeout&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;TypeScript 4.3 RC(リリース候補)がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/&quot;&gt;Announcing TypeScript 4.3 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本的な変更内容はBetaのものを含んでいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2021/04/06/typescript-4.3-beta-hls.js-v1.0.0apple-low-latency-hls-storybook-6.2/&quot;&gt;2021-04-06のJS: TypeScript 4.3 Beta、hls.js v1.0.0(Apple Low-Latency HLS)、Storybook 6.2 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RCで新たに追加されたものとして、&lt;code&gt;--incremental&lt;/code&gt;と&lt;code&gt;--watch&lt;/code&gt;を使った初回のビルドが遅い問題が解消されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/43314&quot;&gt;Do not calculate signatures if old state is not used by sheetalkamat · Pull Request #43314 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/42960&quot;&gt;Make initial incremental/watch builds as fast normal builds by sokra · Pull Request #42960 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、&lt;code&gt;--incremental&lt;/code&gt;フラグなどを使った際に生成される&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/#tsbuildinfo-size-improvements&quot;&gt;&lt;code&gt;.tsbuildinfo&lt;/code&gt;のファイルサイズが改善&lt;/a&gt;されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://angular.io/guide/releases#release-frequency&quot;&gt;6ヶ月ごとにメジャーアップデート&lt;/a&gt;されるAngularの最新版であるAngular 12がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.angular.io/angular-v12-is-now-available-32ed51fbfd49&quot;&gt;Angular v12 is now available. It’s that time again, friends — we’re… | by Mark Techson | May, 2021 | Angular Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/releases/tag/12.0.0&quot;&gt;Release 12.0.0 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;View Engineは非推奨となりIvyがデフォルトへと移行、Legacy i18n Message IDsからの移行ツールが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/guide/migration-legacy-message-id&quot;&gt;Angular - Migrating legacy localization IDs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前、開発終了を告知されていたProtractorについても、Angular 12からProtractorはデフォルトでは新規プロジェクトには含めないようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/protractor/issues/5502#issuecomment-837432362&quot;&gt;Future of Angular E2E &amp;amp; Plans for Protractor · Issue #5502 · angular/protractor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Angular 12ではIE 11のサポートが非推奨となり警告が出るようになっています。&lt;br&gt;
IE 11のサポートはAngular 13で削除される予定です。&lt;br&gt;
そのため、AngularでのIEサポートはAngular 12が最後となり、Angular 12のLTS期限である2022年11月で完全にIEサポートが終了する予定となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/issues/41840&quot;&gt;RFC: Internet Explorer 11 support deprecation and removal · Issue #41840 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には、インラインSassのサポートなど。 TypeScript 4.2へのアップデート、webpack 5の正式サポートなども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-do-you-not-like-about-definitelytyped-as-a-user-and-contributor-issue-44030-microsoft-typescript&quot;&gt;What do you not like about DefinitelyTyped as a user and contributor? · Issue #44030 · microsoft/TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/44030&quot; title=&quot;What do you not like about DefinitelyTyped as a user and contributor? · Issue #44030 · microsoft/TypeScript&quot;&gt;github.com/microsoft/TypeScript/issues/44030&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DefinitelyTypedへの意見を募集しているIssue&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v14-17-0-lts-node-js&quot;&gt;Node v14.17.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v14.17.0/&quot; title=&quot;Node v14.17.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v14.17.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v14.17.0リリース。&lt;br&gt;
試験的に&lt;code&gt;diagnostics_channel&lt;/code&gt;を追加、&lt;code&gt;crypto.randomUUID()&lt;/code&gt;の追加。&lt;br&gt;
また、Node.js 15で実装されていたコアモジュールにおける&lt;code&gt;AbortController&lt;/code&gt;と&lt;code&gt;AbortSignal&lt;/code&gt;の対応をバックポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-10-release-notes-deno-blog&quot;&gt;Deno 1.10 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.10&quot; title=&quot;Deno 1.10 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.10&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.10リリース。&lt;br&gt;
&lt;code&gt;deno test&lt;/code&gt;がisolateした状態でparallelにテストを実行、&lt;code&gt;permissions&lt;/code&gt;の指定に対応、出力の変更、コメントのコードの型チェックに対応など。&lt;br&gt;
&lt;code&gt;Worker.postMessage&lt;/code&gt;がstructured clone algorithmに対応、localStorageなどのWeb Storage APIに対応。&lt;br&gt;
&lt;code&gt;WebAssembly.Memory&lt;/code&gt;が&lt;code&gt;shared&lt;/code&gt;オプションに対応、&lt;code&gt;--import-map&lt;/code&gt;へリモートURLを指定できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-3-rc-typescript&quot;&gt;Announcing TypeScript 4.3 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/&quot; title=&quot;Announcing TypeScript 4.3 RC | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.3 RCリリース。&lt;br&gt;
setterにgetterとは異なる型を指定できるように、&lt;code&gt;override&lt;/code&gt;キーワードの追加、Template String Typeの改善。&lt;br&gt;
Private Class Elements(fields/methods/accessors)のサポート、&lt;code&gt;static&lt;/code&gt; Index Signatureのサポート。&lt;br&gt;
&lt;code&gt;ConstructorParameters&lt;/code&gt;がAbstract classをサポート、Genericsにおける型の絞り込みの改善、Promiseオブジェクトを条件式に渡してしまうミスのチェックを追加。&lt;br&gt;
その他には、&lt;code&gt;.tsbuildinfo&lt;/code&gt;のサイズ改善、watch時の初回ビルドの改善など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-v12-is-now-available-it-s-that-time-again-friends-we-re-by-mark-techson-may-2021-angular-blog&quot;&gt;Angular v12 is now available. It’s that time again, friends — we’re… | by Mark Techson | May, 2021 | Angular Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/angular-v12-is-now-available-32ed51fbfd49&quot; title=&quot;Angular v12 is now available. It’s that time again, friends — we’re… | by Mark Techson | May, 2021 | Angular Blog&quot;&gt;blog.angular.io/angular-v12-is-now-available-32ed51fbfd49&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 12リリース。&lt;br&gt;
View Engineは非推奨となりIvyがデフォルトへと移行、Legacy i18n Message IDsからの移行ツール、インラインSassのサポートなど。&lt;br&gt;
TypeScript 4.2へのアップデート、webpack 5の正式サポート、IE 11サポートの非推奨化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/releases/tag/12.0.0&quot; title=&quot;Release 12.0.0 · angular/angular&quot;&gt;Release 12.0.0 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/guide/migration-legacy-message-id&quot; title=&quot;Angular - Migrating legacy localization IDs&quot;&gt;Angular - Migrating legacy localization IDs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v9-1-v8&quot;&gt;V8 release v9.1 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-91&quot; title=&quot;V8 release v9.1 · V8&quot;&gt;v8.dev/blog/v8-release-91&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v9.1リリース。&lt;br&gt;
Top-level awaitのデフォルトサポート、&lt;code&gt;#foo in obj&lt;/code&gt;のPrivate brand checksのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-docusaurus-2-beta-docusaurus&quot;&gt;Announcing Docusaurus 2 Beta | Docusaurus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docusaurus.io/blog/2021/05/12/announcing-docusaurus-two-beta&quot; title=&quot;Announcing Docusaurus 2 Beta | Docusaurus&quot;&gt;docusaurus.io/blog/2021/05/12/announcing-docusaurus-two-beta&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Docusaurus 2 Betaリリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;writing-a-type-safe-store-lachlan-miller&quot;&gt;Writing A Type Safe Store | Lachlan Miller&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://lachlan-miller.me/articles/advanced-type-a-type-safe-store-for-vue-3&quot; title=&quot;Writing A Type Safe Store | Lachlan Miller&quot;&gt;lachlan-miller.me/articles/advanced-type-a-type-safe-store-for-vue-3&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueのステート管理ライブラリであるPiniaのType SafeなStoreの型定義の解説&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/posva/pinia/&quot; title=&quot;posva/pinia: 🍍 Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support&quot;&gt;posva/pinia: 🍍 Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-gen-css-container-css-tricks&quot;&gt;Next Gen CSS: @container | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/next-gen-css-container/&quot; title=&quot;Next Gen CSS: @container | CSS-Tricks&quot;&gt;css-tricks.com/next-gen-css-container/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@container&lt;/code&gt;についての記事。&lt;br&gt;
親要素には&lt;code&gt;contain&lt;/code&gt;プロパティを指定する必要がある点、&lt;code&gt;@container&lt;/code&gt;でのレスポンシブデザインについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cross-browser-tracking-vulnerablity-in-tor-safari-chrome-and-firefox-fingerprintjs&quot;&gt;Cross-browser tracking vulnerablity in Tor, Safari, Chrome and Firefox - FingerprintJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fingerprintjs.com/blog/external-protocol-flooding/&quot; title=&quot;Cross-browser tracking vulnerablity in Tor, Safari, Chrome and Firefox - FingerprintJS&quot;&gt;fingerprintjs.com/blog/external-protocol-flooding/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザからURLスキームでアプリを開くときの挙動を利用してフィンガープリントできるという話。&lt;br&gt;
未知のプロトコルを開く際にはダイアログでの確認やユーザインタラクションが必要となっている。&lt;br&gt;
しかし、それぞれのブラウザで既知のプロトコルや&lt;code&gt;about:blank&lt;/code&gt;を使ったSOP(Same Origin Policy)での抜け道で、どのアプリがインストールされているかを判定できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;docbase-kray-inc&quot;&gt;DocBaseのフロントエンド改修をどのように進めたか – KRAY Inc.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kray.jp/blog/how-to-docbase-renewal/&quot; title=&quot;DocBaseのフロントエンド改修をどのように進めたか – KRAY Inc.&quot;&gt;kray.jp/blog/how-to-docbase-renewal/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;refacoring&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Backbone + Marionette + CoffeeScriptで書かれていたウェブサービスをReact + TypeScriptに一括で移行した話。&lt;br&gt;
E2Eを使ったテスト、構造を維持しながらReact化、コンポーネントへの分離などの移行の方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-is-used-by-millions-so-why-are-we-running-out-of-money-babel&quot;&gt;Babel is used by millions, so why are we running out of money? · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/05/10/funding-update.html&quot; title=&quot;Babel is used by millions, so why are we running out of money? · Babel&quot;&gt;babeljs.io/blog/2021/05/10/funding-update.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babelの資金の状態、ロードマップ、寄付について。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/docs/en/roadmap#babel-2021-roadmap&quot; title=&quot;Babel Roadmap · Babel&quot;&gt;Babel Roadmap · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;styled-components-cybozu-inside-out&quot;&gt;styled-componentsの採用と既存資産を捨てた理由 - Cybozu Inside Out | サイボウズエンジニアのブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cybozu.io/entry/2020/06/25/105457&quot; title=&quot;styled-componentsの採用と既存資産を捨てた理由 - Cybozu Inside Out | サイボウズエンジニアのブログ&quot;&gt;blog.cybozu.io/entry/2020/06/25/105457&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;sass&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Sassで書かれていたスタイルをCSS in JSに移行する話。&lt;br&gt;
styled-componentsを使って書く場合にスタイリングとJSXを分離するためのルール、Sassの変数を抽出して移行するスクリプトについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;coderaiser-simport-import-like-with-require-but-using-async&quot;&gt;coderaiser/simport: Import like with require but using async&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/coderaiser/simport&quot; title=&quot;coderaiser/simport: Import like with require but using async&quot;&gt;github.com/coderaiser/simport&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESMなNode.jsで&lt;code&gt;require&lt;/code&gt;、&lt;code&gt;__filename&lt;/code&gt;、&lt;code&gt;__dirname&lt;/code&gt;などのshim機能を提供するライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 18 May 2021 11:32:50 +0900</pubDate>
        <link>https://jser.info/2021/05/18/node.js-14.17.0-typescript-4.3-rc-angular-v12/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/18/node.js-14.17.0-typescript-4.3-rc-angular-v12/</guid>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        <category>node.js</category>
        
        <category>CSS</category>
        
        <category>issue</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-05-11のJS: Bootstrap 5、Underscore.js 1.13.0(`_.template`のセキュリティ修正)、Prettier 2.3</title>
        <description>&lt;p&gt;JSer.info #539 - CSSフレームワークであるBootstrap 5 がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2021/05/05/bootstrap-5/&quot;&gt;Bootstrap 5 | Bootstrap Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bootstrap 5では、IEのサポート終了し、jQueryに依存しないように書き換えられています。&lt;br&gt;
offcanvasコンポーネント、cardの代替えとなるaccordionコンポーネントが追加されています。&lt;br&gt;
また、FormとLayoutの変更、RTLのサポート、SassのUtility APIの追加なども行われています。&lt;/p&gt;

&lt;p&gt;v4からのマイグレーション方法については次のドキュメントにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/5.0/migration/&quot;&gt;Migrating to v5 · Bootstrap v5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Underscore.js 1.13がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://underscorejs.org/#1.13.0&quot;&gt;Underscore.js 1.13.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Underscore.js 1.13では、&lt;code&gt;package.json&lt;/code&gt;の&lt;a href=&quot;https://nodejs.org/api/packages.html#packages_exports&quot;&gt;&lt;code&gt;exports&lt;/code&gt;フィールド&lt;/a&gt;に対応し、ECMAScript Modulesをサポートしています。&lt;/p&gt;

&lt;p&gt;また、Underscore.js 1.12では、lodash &lt;a href=&quot;https://github.com/lodash/lodash/releases/tag/4.17.21&quot;&gt;4.17.21&lt;/a&gt;で修正された、&lt;code&gt;_.template&lt;/code&gt;の脆弱性の修正も含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://app.snyk.io/vuln/SNYK-JS-LODASH-1040724&quot;&gt;Command Injection in lodash | Snyk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あまり多くはないと思いますが、UnderscoreとLodashどちらも&lt;code&gt;_.template&lt;/code&gt;の&lt;code&gt;variable&lt;/code&gt;オプションに任意の文字列を渡せる場合に、&lt;br&gt;
渡した文字列をコードとして実行できる脆弱性が修正されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hello: &amp;lt;%= name %&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ここに任意の文字列を渡せると脆弱性&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mustache&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;Prettier 2.3がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://prettier.io/blog/2021/05/09/2.3.0.html&quot;&gt;Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official · Prettier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScriptのフォーマットの大きめな変更、Handlebarsサポートをalphaからreleaseに変更、JSON5/JSONのフォーマットの修正などが含まれています。&lt;br&gt;
JavaScriptの変数やプロパティへの代入における一貫性の修正が含まれているため、アップデート後に大きなDiffがでる可能性についても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-5-bootstrap-blog&quot;&gt;Bootstrap 5 | Bootstrap Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2021/05/05/bootstrap-5/&quot; title=&quot;Bootstrap 5 | Bootstrap Blog&quot;&gt;blog.getbootstrap.com/2021/05/05/bootstrap-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 5リリース。&lt;br&gt;
IEのサポート終了、jQueryの削除。&lt;br&gt;
offcanvasコンポーネント、cardの代替えとなるaccordionコンポーネントの追加。&lt;br&gt;
FormとLayoutの変更、RTLのサポート、SassのUtility APIの追加など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/5.0/migration/&quot; title=&quot;Migrating to v5 · Bootstrap v5.0&quot;&gt;Migrating to v5 · Bootstrap v5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;underscore-js&quot;&gt;Underscore.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://underscorejs.org/#1.13.0&quot; title=&quot;Underscore.js&quot;&gt;underscorejs.org/#1.13.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;underscore 1.13.0リリース。&lt;br&gt;
ECMAScript Modulesのサポート。&lt;br&gt;
1.12.1では&lt;code&gt;_.template&lt;/code&gt;の&lt;code&gt;variable&lt;/code&gt;オプション経由でのCode Injectionができる脆弱性も修正されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-2-3-in-which-assignments-are-consistent-short-keys-non-breaking-and-handlebars-official-prettier&quot;&gt;Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2021/05/09/2.3.0.html&quot; title=&quot;Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official · Prettier&quot;&gt;prettier.io/blog/2021/05/09/2.3.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 2.3リリース。&lt;br&gt;
JavaScriptのフォーマットの大きめな変更、Handlebarsサポートをalphaからreleaseに変更、JSON5/JSONのフォーマットの修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-we-use-web-components-at-github-the-github-blog&quot;&gt;How we use Web Components at GitHub - The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2021-05-04-how-we-use-web-components-at-github/&quot; title=&quot;How we use Web Components at GitHub - The GitHub Blog&quot;&gt;github.blog/2021-05-04-how-we-use-web-components-at-github/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubでのWeb Componentsについて。&lt;br&gt;
Rails ViewComponentとCatalystを使ったWeb Componentsの組み込み、GitHub Elementsの公開についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/github-elements&quot; title=&quot;github/github-elements: GitHub&amp;amp;amp;#039;s Web Component collection.&quot;&gt;github/github-elements: GitHub&amp;#039;s Web Component collection.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;api&quot;&gt;リソースの読み込みを助けるウェブブラウザ API の世界&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nhiroki.jp/2021/05/06/resource-loading-apis&quot; title=&quot;リソースの読み込みを助けるウェブブラウザ API の世界&quot;&gt;nhiroki.jp/2021/05/06/resource-loading-apis&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;先読みや読み込みの優先度などウェブブラウザにおけるリソースロードのHintとなるAPIや仕組みについてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hello-modules-javascript-modules-also-known-as-esm-by-sindre-sorhus-may-2021-sindre-sorhus-blog&quot;&gt;Hello, Modules!. JavaScript Modules, also known as ESM… | by Sindre Sorhus | May, 2021 | 🦄 Sindre Sorhus’ blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.sindresorhus.com/hello-modules-d1010b4e777b&quot; title=&quot;Hello, Modules!. JavaScript Modules, also known as ESM… | by Sindre Sorhus | May, 2021 | 🦄 Sindre Sorhus’ blog&quot;&gt;blog.sindresorhus.com/hello-modules-d1010b4e777b&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10のサポートが終了したことで、ESMへの移行をどのようにするかについての記事。&lt;br&gt;
ESMのメリット、パッケージのメンテナ向けの移行ガイドについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-guide-to-newly-supported-modern-css-pseudo-class-selectors-smashing-magazine&quot;&gt;A Guide To Newly Supported, Modern CSS Pseudo-Class Selectors — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/guide-supported-modern-css-pseudo-class-selectors/&quot; title=&quot;A Guide To Newly Supported, Modern CSS Pseudo-Class Selectors — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/04/guide-supported-modern-css-pseudo-class-selectors/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;最近のCSSで扱える擬似クラスの紹介記事。&lt;br&gt;
任意の&lt;code&gt;a&lt;/code&gt;にマッチする&lt;code&gt;:any-link&lt;/code&gt;、フォーカスしてる要素を扱う&lt;code&gt;:focus-visible&lt;/code&gt;と&lt;code&gt;:focus-within&lt;/code&gt;、セレクタを扱う&lt;code&gt;:is()&lt;/code&gt;と&lt;code&gt;where()&lt;/code&gt;と&lt;code&gt;:has()&lt;/code&gt;、&lt;code&gt;:empty&lt;/code&gt;など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chapter-8-css-css-tricks&quot;&gt;Chapter 8: CSS | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/chapter-8-css/&quot; title=&quot;Chapter 8: CSS | CSS-Tricks&quot;&gt;css-tricks.com/chapter-8-css/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSの歴史についての記事。&lt;br&gt;
Lie、IE3のCSS実装、W3CのCSS WG、NetscapeのJSSS。&lt;br&gt;
doctype宣言でのスイッチと後方互換性、fantasai、CSS3でのモジューラアプローチについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svelte-summit-spring-2021&quot;&gt;Svelte Summit Spring 2021 簡易まとめ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/tomoam/articles/889618f2e6e62f&quot; title=&quot;Svelte Summit Spring 2021 簡易まとめ&quot;&gt;zenn.dev/tomoam/articles/889618f2e6e62f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Conference&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Svelte Summit Springの動画と概要のまとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sveltesummit.com/&quot; title=&quot;Svelte Summit is a FREE whole-day online event.&quot;&gt;Svelte Summit is a FREE whole-day online event.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinclairzx81-hammer-build-tool-for-browser-and-node-applications&quot;&gt;sinclairzx81/hammer: Build Tool for Browser and Node Applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinclairzx81/hammer&quot; title=&quot;sinclairzx81/hammer: Build Tool for Browser and Node Applications&quot;&gt;github.com/sinclairzx81/hammer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildをベースにしたparcelのようにHTMLをエントリポイントにしたビルド/開発ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsxtools-cqfill-polyfill-for-css-container-queries&quot;&gt;jsxtools/cqfill: Polyfill for CSS Container Queries&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsxtools/cqfill&quot; title=&quot;jsxtools/cqfill: Polyfill for CSS Container Queries&quot;&gt;github.com/jsxtools/cqfill&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Container Queriesのpolyfill。&lt;br&gt;
PostCSSと組み合わせて利用できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-zx-a-tool-for-writing-better-scripts&quot;&gt;google/zx: A tool for writing better scripts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/zx&quot; title=&quot;google/zx: A tool for writing better scripts&quot;&gt;github.com/google/zx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ShellScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;シェルスクリプトのような処理をJavaScriptで書けるNode.js製のツール。&lt;br&gt;
Top-Level awaitを使ってシェルコマンドをそのまま使える&lt;code&gt;$&lt;/code&gt;やHTTP通信するfetchなどが同梱されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-javascript-kindle-amazon&quot;&gt;プロフェッショナルWebプログラミング　JavaScript | 柳井 政和 | 工学 | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B092QQJQF4/&quot; title=&quot;プロフェッショナルWebプログラミング　JavaScript | 柳井 政和 | 工学 | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/dp/B092QQJQF4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブページを動作させることに絞ったJavaScriptの入門書&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-vue-xss&quot;&gt;React と Vue に関する XSS アンチパターン&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/yuuhu04/books/xss-anti-pattern-of-react-and-vue&quot; title=&quot;React と Vue に関する XSS アンチパターン&quot;&gt;zenn.dev/yuuhu04/books/xss-anti-pattern-of-react-and-vue&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;XSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactとVueにおけるXSSのパターンについて書かれた文章。&lt;br&gt;
ReactとVueのエスケープの仕組み、フレームワークが保護しないケースとXSSが発生するパターンについて書かれている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 11 May 2021 11:01:52 +0900</pubDate>
        <link>https://jser.info/2021/05/11/bootstrap-5-underscore.js-1.13.0_.template-prettier-2.3/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/11/bootstrap-5-underscore.js-1.13.0_.template-prettier-2.3/</guid>
        
        <category>CSS</category>
        
        <category>Tools</category>
        
        <category>node.js</category>
        
        <category>book</category>
        
        <category>WebComponents</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-05-04のJS: Babel 7.14.0、RxJS 7.0.0、Safari 14.1</title>
        <description>&lt;p&gt;JSer.info #538 - Babel 7.14.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/04/29/7.14.0&quot;&gt;7.14.0 Released: New class features enabled by default, TypeScript 4.3, and better CommonJS interop · Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v7.14.0&quot;&gt;Release v7.14.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/05/04/ecmascript-proposal-update&quot;&gt;2021-04のTC39ミーティング&lt;/a&gt;でStage 4となったclass fields/private methodsなどを&lt;code&gt;@babel/preset-env&lt;/code&gt;がデフォルトでサポートするようになりました。&lt;br&gt;
そのため、&lt;code&gt;@babel/plugin-proposal-class-properties&lt;/code&gt;と&lt;code&gt;@babel/plugin-proposal-private-methods&lt;/code&gt;を個別のプラグインとして入れる必要はなくなっています。&lt;/p&gt;

&lt;p&gt;また、Node.jsのESMからCommonJSのモジュールをインポートする際の相互運用性を向上させるオプションとして、&lt;code&gt;importInterop: &amp;quot;node&amp;quot;&lt;/code&gt;オプションの追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/pull/12838&quot;&gt;Implement &lt;code&gt;importInterop: &amp;quot;node&amp;quot;&lt;/code&gt; option for module transforms by nicolo-ribaudo · Pull Request #12838 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#importinterop&quot;&gt;@babel/plugin-transform-modules-commonjs · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またTypeScript 4.3のサポート、Stage 1のES Proposalである&lt;code&gt;async do&lt;/code&gt; expressionのサポートなども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;RxJS 7.0.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#700-2021-04-29&quot;&gt;rxjs/CHANGELOG.md at master · ReactiveX/rxjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rxjs.dev/deprecations/breaking-changes&quot;&gt;RxJS - Breaking Changes in Version 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RxJS 7.0.0ではファイルサイズが6.xに対して53%程度に小さくなっています。&lt;br&gt;
また、TypeScriptの型の修正やAPIの一貫性の修正などが含まれています。&lt;br&gt;
機能追加として、Async IteratorやReadable Streamの対応、&lt;code&gt;animationFrames&lt;/code&gt;、&lt;code&gt;share(config)&lt;/code&gt;の追加などが含まれています。&lt;/p&gt;

&lt;p&gt;次のスライドと動画でも詳しく紹介されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1-LU7YE3NWw8jHeAgdmLu4CBfG7osCx6MsSIeFs16k60/edit#slide=id.g389cbad6b8_0_36&quot;&gt;RxJS Live Asia 2021 - Google スライド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0S5ISwDaFHI&quot;&gt;RxJS Live! ASIA - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11648/new-webkit-features-in-safari-14-1/&quot;&gt;New WebKit Features in Safari 14.1 | WebKit&lt;/a&gt;では、Safari 14.1の変更点について書かれています。&lt;/p&gt;

&lt;p&gt;Flexbox Gapのサポート、macOSで&lt;code&gt;input&lt;/code&gt;要素の&lt;code&gt;type&lt;/code&gt;属性で&lt;code&gt;date&lt;/code&gt;と&lt;code&gt;time&lt;/code&gt;と&lt;code&gt;datetime-local&lt;/code&gt;のサポートが追加されています。また、speech recognitionを含むWeb Speech API、MediaRecorder API、WebMのサポートなども追加されています。&lt;br&gt;
JavaScriptではClass Fields、WekRefのサポート、i18n APIのサポート改善、WebAssemblyのThreadingのサポートなどが含まれています。&lt;br&gt;
その他には、Private Click Measurementをデフォルトで有効化、Storage AccessAPIの更新やWeb Inspectorのアップデートなども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;future-of-angular-e2e-plans-for-protractor-issue-5502-angular-protractor&quot;&gt;Future of Angular E2E &amp;amp; Plans for Protractor · Issue #5502 · angular/protractor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular/protractor/issues/5502&quot; title=&quot;Future of Angular E2E &amp;amp;amp; Plans for Protractor · Issue #5502 · angular/protractor&quot;&gt;github.com/angular/protractor/issues/5502&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AngularでのE2EテストフレームワークであるProtractorの開発終了のスケジュールについて。&lt;br&gt;
他のテストフレームワークが充実してきているので、2021年5月にDeprecatedとし、2022年末に開発終了とするスケジュールについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-14-0-released-new-class-features-enabled-by-default-typescript-4-3-and-better-commonjs-interop-babel&quot;&gt;7.14.0 Released: New class features enabled by default, TypeScript 4.3, and better CommonJS interop · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/04/29/7.14.0&quot; title=&quot;7.14.0 Released: New class features enabled by default, TypeScript 4.3, and better CommonJS interop · Babel&quot;&gt;babeljs.io/blog/2021/04/29/7.14.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7.14.0リリース。&lt;br&gt;
Stage 4となったclass fieldsをpreset-envがデフォルトでサポート、&lt;code&gt;importInterop: &amp;quot;node&amp;quot;&lt;/code&gt;オプションの追加、TypeScript 4.3のサポート。&lt;br&gt;
また、Stage 1のES Proposalである&lt;code&gt;async do&lt;/code&gt; expressionのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v7.14.0&quot; title=&quot;Release v7.14.0 · babel/babel&quot;&gt;Release v7.14.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rxjs-changelog-md-at-master-reactivex-rxjs&quot;&gt;rxjs/CHANGELOG.md at master · ReactiveX/rxjs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#700-2021-04-29&quot; title=&quot;rxjs/CHANGELOG.md at master · ReactiveX/rxjs&quot;&gt;github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#700-2021-04-29&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;RxJS 7.0.0リリース。&lt;br&gt;
TypeScript 4.2未満のサポート終了、&lt;code&gt;rxjs-compat&lt;/code&gt;の削除、&lt;code&gt;lift&lt;/code&gt;をexposeしないように、各種演算子のAPI変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rxjs.dev/deprecations/breaking-changes&quot; title=&quot;RxJS - Breaking Changes in Version 7&quot;&gt;RxJS - Breaking Changes in Version 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-webkit-features-in-safari-14-1-webkit&quot;&gt;New WebKit Features in Safari 14.1 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11648/new-webkit-features-in-safari-14-1/&quot; title=&quot;New WebKit Features in Safari 14.1 | WebKit&quot;&gt;webkit.org/blog/11648/new-webkit-features-in-safari-14-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari 14.1の変更点について。&lt;br&gt;
Flexbox Gap、macOSでDate&amp;amp;Time input、Web Speech API、MediaRecorder API、WebMのサポートなど。&lt;br&gt;
JavaScriptのClass Fields、WekRefのサポート、i18n APIのサポート改善、WebAssemblyのThreadingのサポートなど。&lt;br&gt;
また、Private Click Measurementをデフォルトで有効化、Storage AccessAPIの更新など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-yargs-v17-0-0-yargs-yargs&quot;&gt;Release yargs v17.0.0 · yargs/yargs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yargs/yargs/releases/tag/v17.0.0&quot; title=&quot;Release yargs v17.0.0 · yargs/yargs&quot;&gt;github.com/yargs/yargs/releases/tag/v17.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コマンドライン引数パーサーのyargs 17.0.0リリース。&lt;br&gt;
破壊的な変更として、Node.js 10のサポート終了、PrivateメソッドにPrivate Fieldsを使うように変更、&lt;code&gt;reset()&lt;/code&gt;メソッドを非推奨化など。&lt;br&gt;
Node v14.8.0からTop-Level Awaitをサポートしたため、&lt;code&gt;yargs()&lt;/code&gt;や&lt;code&gt;parseAsync&lt;/code&gt;など色々な処理で非同期処理に対応するように変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2021-04-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2021-04 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/05/04/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2021-04 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2021/05/04/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年4月のTC39 MeetingsでStageが変わったProposalのまとめ。&lt;br&gt;
Class Field/Private MethodsがStage 4となり、ES2022に入ることが決まった&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react17-event-delegation&quot;&gt;React17のevent delegationの破壊的変更を理解する&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/co9xs/articles/react17-event-delegation&quot; title=&quot;React17のevent delegationの破壊的変更を理解する&quot;&gt;zenn.dev/co9xs/articles/react17-event-delegation&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 17のevent delegationの変更についての記事。&lt;br&gt;
実際に動作が変わるサンプルを元に、React 17でのevent delegationの仕組みの変化について解説している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.reactjs.org/blog/2020/08/10/react-v17-rc.html&quot; title=&quot;React v17.0 Release Candidate: 新機能「なし」 – React Blog&quot;&gt;React v17.0 Release Candidate: 新機能「なし」 – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-use-ecmascript-modules-in-node-js&quot;&gt;How to Use ECMAScript Modules in Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dmitripavlutin.com/ecmascript-modules-nodejs/&quot; title=&quot;How to Use ECMAScript Modules in Node.js&quot;&gt;dmitripavlutin.com/ecmascript-modules-nodejs/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでのECMAScript modulesの使い方についての記事。&lt;br&gt;
モジュールモード、モジュールのimportの方法、Dynamic Import、CommonJSなモジュールのimport、&lt;code&gt;import.meta&lt;/code&gt;についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;build-an-https-intercepting-javascript-proxy-in-30-seconds-flat-http-toolkit&quot;&gt;Build an HTTPS-intercepting JavaScript proxy in 30 seconds flat | HTTP Toolkit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://httptoolkit.tech/blog/javascript-mitm-proxy-mockttp/&quot; title=&quot;Build an HTTPS-intercepting JavaScript proxy in 30 seconds flat | HTTP Toolkit&quot;&gt;httptoolkit.tech/blog/javascript-mitm-proxy-mockttp/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;mockttpを使ったhttpsのサイトをProxyで書き換える方法についての紹介記事&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/httptoolkit/mockttp&quot; title=&quot;httptoolkit/mockttp: Powerful friendly HTTP mock server &amp;amp;amp;amp; proxy&quot;&gt;httptoolkit/mockttp: Powerful friendly HTTP mock server &amp;amp; proxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-10-node-js-12&quot;&gt;Node.js 10がサポート終了したので、Node.js 12以降だとできるようになることをまとめる&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/azu/scraps/bb1106a04ed9e6&quot; title=&quot;Node.js 10がサポート終了したので、Node.js 12以降だとできるようになることをまとめる&quot;&gt;zenn.dev/azu/scraps/bb1106a04ed9e6&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 12から利用できるようになったNode.jsのAPIや機能、V8アップデートによるECMAScriptサポートについてまとめた記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hosting-sqlite-databases-on-github-pages-or-any-static-file-hoster-phireskys-blog&quot;&gt;Hosting SQLite databases on Github Pages - (or any static file hoster) - phiresky&amp;#039;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/&quot; title=&quot;Hosting SQLite databases on Github Pages - (or any static file hoster) - phiresky&amp;amp;#039;s blog&quot;&gt;phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SQLite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyにコンパイルしたSQLiteと参照用のSQLiteファイルを用意し、必要な部分だけを取得できる仕組みを作ったという話。&lt;br&gt;
DBファイルをすべてメモリへ載せないで使うために、HTTP Rangeリクエストを使って必要なchunkだけを取得するHTTPベースの仮想ファイルシステムを作っている。&lt;br&gt;
SQLiteのDBのページサイズやスキーマ情報から必要な部分だけをRangeリクエストで取得している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale-aws-news-blog&quot;&gt;Introducing CloudFront Functions – Run Your Code at the Edge with Low Latency at Any Scale | AWS News Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/jp/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/&quot; title=&quot;Introducing CloudFront Functions – Run Your Code at the Edge with Low Latency at Any Scale | AWS News Blog&quot;&gt;aws.amazon.com/jp/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWS CloudFrontでCDNエッジな処理をJavaScriptでかけるサービス。&lt;br&gt;
ECMAScript 5.1互換なJavaScript、処理時間が1ms以内、メモリは2MB以内、パッケージサイズは10kb以下のファイルサイズ、Network/File IOなし&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;itsjavi-jsx-runtime-extremely-lightweight-jsx-runtime-2kb-to-write-jsx-without-react-in-typescript-or-javascript&quot;&gt;itsjavi/jsx-runtime: Extremely lightweight JSX runtime (&amp;lt;2KB) to write JSX without React in TypeScript or JavaScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/itsjavi/jsx-runtime&quot; title=&quot;itsjavi/jsx-runtime: Extremely lightweight JSX runtime (&amp;amp;lt;2KB) to write JSX without React in TypeScript or JavaScript.&quot;&gt;github.com/itsjavi/jsx-runtime&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXで書いて変換するとStandaloneで動作するコードを出力するJSX TransformerとRuntime&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fower&quot;&gt;Fower&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fower.vercel.app/&quot; title=&quot;Fower&quot;&gt;fower.vercel.app/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TailwindcssライクなUtility-firstのCSS in JSライブラリ。&lt;br&gt;
ReactやVue、またスタイルをJavaScriptで生成するためReact Nativeにも対応する。&lt;br&gt;
UtilityベースのスタイルをPropsとして指定し、TSXや各フレームワーク用のコード補完に対応している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://itnext.io/fower-v1-0-8df48723de0b&quot; title=&quot;Fower v1.0. After half a year’s efforts, today… | by forsigner | Apr, 2021 | ITNEXT&quot;&gt;Fower v1.0. After half a year’s efforts, today… | by forsigner | Apr, 2021 | ITNEXT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mantine&quot;&gt;Mantine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mantine.dev/&quot; title=&quot;Mantine&quot;&gt;mantine.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactコンポーネントとHooksのフレームワーク。&lt;br&gt;
CSS-in-JSにはJSSを利用している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cssinjs/jss&quot; title=&quot;cssinjs/jss: JSS is an authoring tool for CSS which uses JavaScript as a host language.&quot;&gt;cssinjs/jss: JSS is an authoring tool for CSS which uses JavaScript as a host language.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;multithreaded-javascript&quot;&gt;Multithreaded JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/multithreaded-javascript/9781098104429/&quot; title=&quot;Multithreaded JavaScript&quot;&gt;learning.oreilly.com/library/view/multithreaded-javascript/9781098104429/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年11月発売&lt;br&gt;
JavaScriptでのマルチスレッドについての書籍。&lt;br&gt;
Web Worker、Service Worker、SharedWorkerなどについて&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 04 May 2021 21:44:24 +0900</pubDate>
        <link>https://jser.info/2021/05/04/babel-7.14.0-rxjs-7.0.0-safari-14.1/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/04/babel-7.14.0-rxjs-7.0.0-safari-14.1/</guid>
        
        <category>node.js</category>
        
        <category>React</category>
        
        <category>babel</category>
        
        <category>Angular</category>
        
        <category>E2E</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-04-27のJS: Node.js 16.0.0、Chrome 91 beta、Prisma(Ready for production)</title>
        <description>&lt;p&gt;JSer.info #537 - 次期LTS候補となるNode.js 16がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.0.0/&quot;&gt;Node v16.0.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.medium.com/node-js-16-available-now-7f5099a97e70&quot;&gt;Node.js 16 available now. We are excited to announce the release… | by Node.js | Apr, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2021/04/22/090000&quot;&gt;Node.js v16 の主な変更点 - 別にしんどくないブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;V8 9.0へアップデート、&lt;code&gt;timers/promises&lt;/code&gt;の追加、Apple Silicon向けのprebuiltバイナリの配布に対応しています。&lt;br&gt;
また、&lt;code&gt;fs.rmdir&lt;/code&gt;の&lt;code&gt;recursive&lt;/code&gt;オプションの非推奨化、&lt;code&gt;process.binding&lt;/code&gt;を使ったアクセスの非推奨化&lt;code&gt;module.createRequireFromPath&lt;/code&gt;の削除なども含まれています。&lt;/p&gt;

&lt;p&gt;Node.js 16にはNode.js 15の変更も含まれるので、npm 7へのアップデートやUnhandled Rejections時の終了ステータスの変更などの破壊的な変更も含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2020/10/27/react-17-node-v15.0.0-libsass-is-deprecated/&quot;&gt;2020-10-27のJS: React 17、Node v15.0.0、LibSass is Deprecated - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2020/10/21/004612&quot;&gt;Node.js v15 の主な変更点 - 別にしんどくないブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 16は2021-10-26からLTSとなる予定です。&lt;br&gt;
また、Node.js 10.xは2021-04-30でサポートが終了されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Chrome 91 betaがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/04/chrome-91-handwriting-recognition-webxr.html&quot;&gt;Chromium Blog: Chrome 91: Handwriting Recognition, WebXR Plane Detection and More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Origin Trialとして、Service Workerのmanifestの&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md&quot;&gt;&lt;code&gt;capture_links&lt;/code&gt;&lt;/a&gt;、&lt;a href=&quot;https://w3c.github.io/webtransport/&quot;&gt;WebTransport&lt;/a&gt;、&lt;a href=&quot;https://www.chromestatus.com/feature/5732397976911872&quot;&gt;WebXR Plane Detection API&lt;/a&gt;。&lt;br&gt;
その他には、Timerの解像度を仕様準拠の値に変更、WebSockets over HTTP/2のサポート、Service WorkerでES Modulesのサポートなどが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mozaic.fm/episodes/72/webtransport.html&quot;&gt;ep72 WebTransport | mozaic.fm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.jsとTypeScriptを扱うORMである&lt;a href=&quot;https://www.prisma.io/&quot;&gt;Prisma&lt;/a&gt;がProduction Readyというリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.prisma.io/blog/prisma-the-complete-orm-inw24qjeawmb&quot;&gt;Prisma – The Complete ORM for Node.js &amp;amp; TypeScript&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;日本語訳: &lt;a href=&quot;https://zenn.dev/kanasugi/articles/a082bd39c5bdf2&quot;&gt;Node.js &amp;amp; TypeScript向けの完璧なORM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;記事では、Primsaを構成するPrisma Client、Prisma Migrate、Prisma StudioというツールとPrismaの特徴について紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-0-0-current-node-js&quot;&gt;Node v16.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.0.0/&quot; title=&quot;Node v16.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.0.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 16.0.0リリース。&lt;br&gt;
V8 9.0へアップデート、&lt;code&gt;timers/promises&lt;/code&gt;の追加、Apple Silicon向けのprebuiltバイナリの配布など。&lt;br&gt;
&lt;code&gt;fs.rmdir&lt;/code&gt;の&lt;code&gt;recursive&lt;/code&gt;オプションの非推奨化、&lt;code&gt;process.binding&lt;/code&gt;を使ったアクセスの非推奨化、&lt;code&gt;module.createRequireFromPath&lt;/code&gt;の削除など。&lt;br&gt;
これに加えてNode 15での変更であるnpm 7へのアップデートなどが含まれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.medium.com/node-js-16-available-now-7f5099a97e70&quot; title=&quot;Node.js 16 available now. We are excited to announce the release… | by Node.js | Apr, 2021 | Medium&quot;&gt;Node.js 16 available now. We are excited to announce the release… | by Node.js | Apr, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v11-5-0-raineorshine-npm-check-updates&quot;&gt;Release v11.5.0 · raineorshine/npm-check-updates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/raineorshine/npm-check-updates/releases/tag/v11.5.0&quot; title=&quot;Release v11.5.0 · raineorshine/npm-check-updates&quot;&gt;github.com/raineorshine/npm-check-updates/releases/tag/v11.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm-check-updates 11.5.0リリース。&lt;br&gt;
yarnの自動検出に対応&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v9-0-0-puppeteer-puppeteer&quot;&gt;Release v9.0.0 · puppeteer/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/puppeteer/puppeteer/releases/tag/v9.0.0&quot; title=&quot;Release v9.0.0 · puppeteer/puppeteer&quot;&gt;github.com/puppeteer/puppeteer/releases/tag/v9.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer 9.0.0リリース。&lt;br&gt;
Chromium 91へアップデート、Apple M1のサポート、&lt;code&gt;FileChooser.cancel()&lt;/code&gt;が同期処理になるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-91-handwriting-recognition-webxr-plane-detection-and-more&quot;&gt;Chromium Blog: Chrome 91: Handwriting Recognition, WebXR Plane Detection and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/04/chrome-91-handwriting-recognition-webxr.html&quot; title=&quot;Chromium Blog: Chrome 91: Handwriting Recognition, WebXR Plane Detection and More&quot;&gt;blog.chromium.org/2021/04/chrome-91-handwriting-recognition-webxr.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 91ベータリリース。&lt;br&gt;
Origin Trialとして、Service Workerのmanifestの&lt;code&gt;capture_links&lt;/code&gt;、WebTransport、WebXR Plane Detection API。&lt;br&gt;
Timerの解像度を仕様準拠の値に変更、WebSockets over HTTP/2のサポート、Service WorkerでES Modulesのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md&quot; title=&quot;sw-launch/declarative\_link\_capturing.md at main · WICG/sw-launch&quot;&gt;sw-launch/declarative_link_capturing.md at main · WICG/sw-launch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-1-0-reduxjs-redux&quot;&gt;Release v4.1.0 · reduxjs/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/redux/releases/tag/v4.1.0&quot; title=&quot;Release v4.1.0 · reduxjs/redux&quot;&gt;github.com/reduxjs/redux/releases/tag/v4.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Redux 4.1.0リリース。&lt;br&gt;
エラーメッセージをproduction buildから除外することでファイルサイズの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-typescripts-popularity-notes&quot;&gt;Understanding TypeScript&amp;#039;s Popularity | Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://orta.io/notes/js/why-typescript&quot; title=&quot;Understanding TypeScript&amp;amp;#039;s Popularity | Notes&quot;&gt;orta.io/notes/js/why-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptがなぜ人気となったのかを主要なイベントのタイムラインや類似するツールと比較しながら見ている記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prisma-the-complete-orm-for-node-js-typescript&quot;&gt;Prisma – The Complete ORM for Node.js &amp;amp; TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.prisma.io/blog/prisma-the-complete-orm-inw24qjeawmb&quot; title=&quot;Prisma – The Complete ORM for Node.js &amp;amp;amp; TypeScript&quot;&gt;www.prisma.io/blog/prisma-the-complete-orm-inw24qjeawmb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MySQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PostgreSQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとTypeScript向けのORMマッパーであるPrismaがProduction Readyとなった。&lt;br&gt;
スキーマからTypeScriptの型定義を出力して利用できるPrisma Client、データモデルからPrisma Migrate、GUIでデータの閲覧と変更ができるPrisma Studioを持つ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/kanasugi/articles/a082bd39c5bdf2&quot; title=&quot;Node.js &amp;amp;amp;amp; TypeScript向けの完璧なORM&quot;&gt;Node.js &amp;amp; TypeScript向けの完璧なORM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-asynchronous-web-apis-from-webassembly&quot;&gt;Using asynchronous web APIs from WebAssembly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/asyncify/&quot; title=&quot;Using asynchronous web APIs from WebAssembly&quot;&gt;web.dev/asyncify/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Emscriptenで非同期を扱うAsyncify、C++とJS間の値を変換するEmbind、JavaScriptを組み合わせてWasmから非同期のWebPlatformAPIを扱う方法について。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/asyncify&quot; title=&quot;GoogleChromeLabs/asyncify: Standalone Asyncify helper for Binaryen&quot;&gt;GoogleChromeLabs/asyncify: Standalone Asyncify helper for Binaryen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-great-samesite-confusion-jub0bs-com&quot;&gt;The great SameSite confusion :: jub0bs.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jub0bs.com/posts/2021-01-29-great-samesite-confusion/&quot; title=&quot;The great SameSite confusion :: jub0bs.com&quot;&gt;jub0bs.com/posts/2021-01-29-great-samesite-confusion/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;cross-site/same-siteとcross-origin/same-originの違いについての解説記事。&lt;br&gt;
Same-Site Cookieの動作とメカニズムについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/agektmr/articles/f8dcd345a88c97&quot; title=&quot;same-site/cross-site, same-origin/cross-originをちゃんと理解する&quot;&gt;same-site/cross-site, same-origin/cross-originをちゃんと理解する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;overflow-issues-in-css-smashing-magazine&quot;&gt;Overflow Issues In CSS — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/css-overflow-issues/&quot; title=&quot;Overflow Issues In CSS — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/04/css-overflow-issues/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ページの幅を突き抜ける要素の問題と対策についての記事。&lt;br&gt;
要素やCSSプロパティごとに問題の原因や対応方法について紹介している。&lt;br&gt;
またoverflowしている要素の見つけた方などのデバッグ方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;headless-wysiwyg-text-editor-tiptap-editor&quot;&gt;Headless WYSIWYG Text Editor – tiptap editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tiptap.dev/&quot; title=&quot;Headless WYSIWYG Text Editor – tiptap editor&quot;&gt;www.tiptap.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ProseMirrorベースのWYSIWYGエディタライブラリ。&lt;br&gt;
Vue、React、Svelteなどに対応、Y.jsを使ったリアルタイムコラボレーションの対応、シンタックスハイライトやMarkdownの記法を使ったショートカットに対応している&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mhmd-22-ezgesture-small-js-library-for-enabling-gesture-events&quot;&gt;mhmd-22/ezgesture: Small js library for enabling gesture events&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mhmd-22/ezgesture&quot; title=&quot;mhmd-22/ezgesture: Small js library for enabling gesture events&quot;&gt;github.com/mhmd-22/ezgesture&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ドラッグ、スワイプ、ピンチイン/アウトを扱うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-js-ui-ux-library-inkline&quot;&gt;Vue.js UI/UX Library - Inkline&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://inkline.io/&quot; title=&quot;Vue.js UI/UX Library - Inkline&quot;&gt;inkline.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue向けのUIフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;style-check&quot;&gt;Style Check&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://style-check.austingil.com/&quot; title=&quot;Style Check&quot;&gt;style-check.austingil.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSを読み込んでHTML要素に対するスタイルの影響をチェックできるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-graphql-guide&quot;&gt;The GraphQL Guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://graphql.guide/&quot; title=&quot;The GraphQL Guide&quot;&gt;graphql.guide/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLについての書籍と動画。&lt;br&gt;
John ResigとLoren Sands-RamshawによるGraphQLのガイド。&lt;br&gt;
GraphQLの解説、フロントエンド、バックエンド、React、Vue、Android、iOSについて扱う&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.graphql.guide/releasing-the-graphql-guide-d9be04747148&quot; title=&quot;Releasing The GraphQL Guide. John Resig’s book on GraphQL is here! | by Loren Sands-Ramshaw | Apr, 2021 | The GraphQL Guide&quot;&gt;Releasing The GraphQL Guide. John Resig’s book on GraphQL is here! | by Loren Sands-Ramshaw | Apr, 2021 | The GraphQL Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 27 Apr 2021 11:24:29 +0900</pubDate>
        <link>https://jser.info/2021/04/27/node.js-16.0.0-chrome-91-beta-prismaready-for-production/</link>
        <guid isPermaLink="true">https://jser.info/2021/04/27/node.js-16.0.0-chrome-91-beta-prismaready-for-production/</guid>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>Chrome</category>
        
        <category>TypeScript</category>
        
        <category>CSS</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-04-20のJS:  Headless UI 1.0、esbuild/Snowpack/Vite/wmrの比較、debugging Web Vitals</title>
        <description>&lt;p&gt;JSer.info #536 - ReactとVueに対応したスタイルなしコンポーネントライブラリであるHeadless UI 1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.tailwindcss.com/headless-ui-v1&quot;&gt;Headless UI v1.0 – Tailwind CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tailwindlabs/headlessui&quot;&gt;tailwindlabs/headlessui: Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Headless UIはTailwind CSSと一緒に使う目的で開発されているため、コンポーネント自体にはスタイルは含まれていません。&lt;br&gt;
Headless UIにはReactとVueの実装がそれぞれあり、今回のリリースでそれぞれが1.0としてリリースされています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/comparing-the-new-generation-of-build-tools/&quot;&gt;Comparing the New Generation of Build Tools | CSS-Tricks&lt;/a&gt;という記事では、esbuild/Snowpack/Vite/wmrのビルドツールについて比較しています。&lt;/p&gt;

&lt;p&gt;それぞれのツールの特徴や使い方、サポートしているファイル形式、production buildなどについて比較しています。&lt;br&gt;
esbuildは少しレイヤーが異なる気はしますが、それぞれのツールの特徴がまとめられいます。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Google検索結果のランキングにpage experienceというWeb Vitalsをベースとして指標が6月から含まれる予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/blog/2020/11/timing-for-page-experience&quot;&gt;Timing for bringing page experience to Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/blog/2021/04/more-details-page-experience&quot;&gt;More time, tools, and details on the page experience update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これにあわせて、Web Vitalsのデバッグ方法やツールなどが色々と公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/debug-web-vitals-in-the-field/&quot;&gt;Debug Web Vitals in the field&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Web Vitalsのメトリクスのデバッグ方法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/complete-guide-measure-core-web-vitals/&quot;&gt;An In-Depth Guide To Measuring Core Web Vitals — Smashing Magazine&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Web Vitalsの全体的な解説&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webvitals.dev/cls&quot;&gt;Cumulative Layout Shift Debugger (CLS) - webvitals.dev&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CLSのデバッグツール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://waterfaller.dev/&quot;&gt;Waterfaller - find and fix all the slowdowns on your web page to boost speed and core web vital scores&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ページロードをウォータフォール表示して、Web Vitalsのメトリクスなどをどのように改善するかを提示するツール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-9-release-notes-deno-blog&quot;&gt;Deno 1.9 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.9&quot; title=&quot;Deno 1.9 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.9&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.9リリース。&lt;br&gt;
HTTP/2なウェブサーバの実装、opcallの改善、Blob URLのサポート。&lt;br&gt;
&lt;code&gt;--allow-env&lt;/code&gt;と&lt;code&gt;--allow-run&lt;/code&gt;で個別の指定ができるように、&lt;code&gt;--prompt&lt;/code&gt;でインタラクティブにパーミッションの許可ができるように。&lt;br&gt;
&lt;code&gt;Deno.listenTls&lt;/code&gt;でALPNのサポート、tsconfig.jsonの&lt;code&gt;useDefineForClassFields&lt;/code&gt;をデフォルト化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-90-chrome-developers&quot;&gt;New in Chrome 90 - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/new-in-chrome-90/&quot; title=&quot;New in Chrome 90 - Chrome Developers&quot;&gt;developer.chrome.com/blog/new-in-chrome-90/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 90リリース。&lt;br&gt;
&lt;code&gt;overflow: clip&lt;/code&gt;のサポート、AV1 Encoderサポート、Declarative Shadow DOMのサポートなど。&lt;br&gt;
Feature PolicyがPermissions Policyにリネーム、アドレスバーのデフォルトプロトコルが&lt;code&gt;https&lt;/code&gt;に変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;headless-ui-v1-0-tailwind-css&quot;&gt;Headless UI v1.0 – Tailwind CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.tailwindcss.com/headless-ui-v1&quot; title=&quot;Headless UI v1.0 – Tailwind CSS&quot;&gt;blog.tailwindcss.com/headless-ui-v1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;lib&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Headless UI 1.0リリース。&lt;br&gt;
ReactとVueのスタイルなしのUIコンポーネントの実装で、Tailwind CSSと組み合わせる目的で作られている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tailwindlabs/headlessui&quot; title=&quot;tailwindlabs/headlessui: Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&quot;&gt;tailwindlabs/headlessui: Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-pnpm-pnpm&quot;&gt;Release v6.0.0 · pnpm/pnpm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pnpm/pnpm/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · pnpm/pnpm&quot;&gt;github.com/pnpm/pnpm/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pnpm 6.0.0リリース。&lt;br&gt;
Node.js 10のサポート終了、&lt;code&gt;pre&lt;/code&gt;/&lt;code&gt;post&lt;/code&gt; scriptを自動で実行しないように、lockfileのフォーマットを変更、&lt;code&gt;pnpx&lt;/code&gt;が自動的にパッケージをインストールはしないようになるなど。&lt;br&gt;
&lt;code&gt;pnpm link&lt;/code&gt;が&lt;code&gt;--global&lt;/code&gt;をつけたときにglobal modulesとリンクするように、&lt;code&gt;pnpm fetch&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;helmet-changelog-md-at-main-helmetjs-helmet&quot;&gt;helmet/CHANGELOG.md at main · helmetjs/helmet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/helmetjs/helmet/blob/main/CHANGELOG.md#450---2021-04-17&quot; title=&quot;helmet/CHANGELOG.md at main · helmetjs/helmet&quot;&gt;github.com/helmetjs/helmet/blob/main/CHANGELOG.md#450---2021-04-17&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Expressのセキュリティヘッダを扱うhelmet 4.5.0リリース。&lt;br&gt;
Cross-Origin isolationを扱うCOEP、COOP、CORPヘッダに対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/coop-coep/&quot; title=&quot;Making your website &amp;amp;amp;amp;quot;cross-origin isolated&amp;amp;amp;amp;quot; using COOP and COEP&quot;&gt;Making your website &amp;amp;quot;cross-origin isolated&amp;amp;quot; using COOP and COEP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-pdf-announcing-react-pdf-v2-0&quot;&gt;React-pdf - Announcing react-pdf v2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://react-pdf.org/blog/announcing-react-pdf-v2&quot; title=&quot;React-pdf - Announcing react-pdf v2.0&quot;&gt;react-pdf.org/blog/announcing-react-pdf-v2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PDF&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactでPDFを作成するreact-pdf v2.0リリース。&lt;br&gt;
レイアウトとレンダリングの分離、SVGサポート、Hooks APIの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;never-too-late-for-firefox-88-mozilla-hacks-the-web-developer-blog&quot;&gt;Never too late for Firefox 88 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/04/never-too-late-for-firefox-88/&quot; title=&quot;Never too late for Firefox 88 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/04/never-too-late-for-firefox-88/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 88リリース。&lt;br&gt;
&lt;code&gt;:user-valid&lt;/code&gt;と&lt;code&gt;:user-invalid&lt;/code&gt;の実装、&lt;code&gt;RegExp#indices&lt;/code&gt;の実装、&lt;code&gt;AbortSignal.abort()&lt;/code&gt;の実装、FTPサポートの無効化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/88&quot; title=&quot;Firefox 88 for developers - Mozilla | MDN&quot;&gt;Firefox 88 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/88.0/releasenotes/&quot; title=&quot;Firefox 88.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 88.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;comparing-the-new-generation-of-build-tools-css-tricks&quot;&gt;Comparing the New Generation of Build Tools | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/comparing-the-new-generation-of-build-tools/&quot; title=&quot;Comparing the New Generation of Build Tools | CSS-Tricks&quot;&gt;css-tricks.com/comparing-the-new-generation-of-build-tools/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuild, Snowpack, Vite, wmrを比較した記事。&lt;br&gt;
それぞれのツールの特徴や使い方、サポートしているファイル、production buildなどについて比較している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-css-grid-inspector-webkit&quot;&gt;Introducing CSS Grid Inspector | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11588/introducing-css-grid-inspector/&quot; title=&quot;Introducing CSS Grid Inspector | WebKit&quot;&gt;webkit.org/blog/11588/introducing-css-grid-inspector/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 123で導入されたCSS Grid Inspectorの紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;real-world-css-vs-css-in-js-performance-comparison-tomas-pustelniks-personal-website&quot;&gt;Real-world CSS vs. CSS-in-JS performance comparison - Tomas Pustelnik&amp;#039;s personal website&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pustelto.com/blog/css-vs-css-in-js-perf/&quot; title=&quot;Real-world CSS vs. CSS-in-JS performance comparison - Tomas Pustelnik&amp;amp;#039;s personal website&quot;&gt;pustelto.com/blog/css-vs-css-in-js-perf/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Styled Componentsを使ったCSS-in-JSと&lt;br&gt;
linaria を使ってCSSファイルに分離した場合のパフォーマンスを比較した記事。&lt;br&gt;
サイズ、Lighthouseなどを使ったRuntimeのパフォーマンス計測&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html-inputs-and-labels-a-love-story-css-tricks&quot;&gt;HTML Inputs and Labels: A Love Story | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/html-inputs-and-labels-a-love-story/&quot; title=&quot;HTML Inputs and Labels: A Love Story | CSS-Tricks&quot;&gt;css-tricks.com/html-inputs-and-labels-a-love-story/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;LabelとInputについての記事。&lt;br&gt;
アクセシビリティを考慮したラベルの扱い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debug-web-vitals-in-the-field&quot;&gt;Debug Web Vitals in the field&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/debug-web-vitals-in-the-field/&quot; title=&quot;Debug Web Vitals in the field&quot;&gt;web.dev/debug-web-vitals-in-the-field/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web VitalsのメトリクスをJavaScriptで取得して、実際にどの要素がスコアに影響してるのかをデバッグする方法について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report&quot; title=&quot;GoogleChromeLabs/web-vitals-report: Measure and report on your Web Vitals data in Google Analytics&quot;&gt;GoogleChromeLabs/web-vitals-report: Measure and report on your Web Vitals data in Google Analytics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-in-depth-guide-to-measuring-core-web-vitals-smashing-magazine&quot;&gt;An In-Depth Guide To Measuring Core Web Vitals — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/complete-guide-measure-core-web-vitals/&quot; title=&quot;An In-Depth Guide To Measuring Core Web Vitals — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/04/complete-guide-measure-core-web-vitals/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Vitalsについての記事。&lt;br&gt;
Web VitalsのLCP/FID/CLSの解説、Lighthouse/Google Search Consoleのレポート読み方、CrUXのデータの読み方や分析方法などについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;slow-and-steady-converting-sentry-s-entire-frontend-to-typescript-product-blog-sentry&quot;&gt;Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript | Product Blog • Sentry&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript&quot; title=&quot;Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript | Product Blog • Sentry&quot;&gt;blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;refacoring&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SentryのコードをベースをTypeScriptへマイグレーションした話。&lt;br&gt;
戦略として教育、新しいコードをTSで書く、既存のコードをTSに変換をしていった。&lt;br&gt;
徐々に変換していくこと、少しずつ複雑な型にしていくこと、TypeScriptを最新に保つことなどを教訓としてあげている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;waterfaller-find-and-fix-all-the-slowdowns-on-your-web-page-to-boost-speed-and-core-web-vital-scores&quot;&gt;Waterfaller - find and fix all the slowdowns on your web page to boost speed and core web vital scores&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://waterfaller.dev/&quot; title=&quot;Waterfaller - find and fix all the slowdowns on your web page to boost speed and core web vital scores&quot;&gt;waterfaller.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Vitalsの指標とリソースのロードをウォーターフォールチャートで表示し、なぜSlowdownしてるのかの解説と修正方法を提示してくれるツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cumulative-layout-shift-debugger-cls-webvitals-dev&quot;&gt;Cumulative Layout Shift Debugger (CLS) - webvitals.dev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webvitals.dev/cls&quot; title=&quot;Cumulative Layout Shift Debugger (CLS) - webvitals.dev&quot;&gt;webvitals.dev/cls&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cumulative Layout Shift(CLS)のデバッグツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ivanhofer-typesafe-i18n&quot;&gt;ivanhofer/typesafe-i18n&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ivanhofer/typesafe-i18n&quot; title=&quot;ivanhofer/typesafe-i18n&quot;&gt;github.com/ivanhofer/typesafe-i18n&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存のないi18nライブラリ。&lt;br&gt;
TypeScriptを使った翻訳漏れのチェック、pluralなどのtransformerサポート、rollupやCLIを使った最適化などをサポートしている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lukejacksonn-servor-dependency-free-file-server-for-single-page-app-development&quot;&gt;lukejacksonn/servor: Dependency free file server for single page app development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lukejacksonn/servor&quot; title=&quot;lukejacksonn/servor: Dependency free file server for single page app development&quot;&gt;github.com/lukejacksonn/servor&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存のないローカルサーバライブラリ。&lt;br&gt;
ファイル変更でリロード、起動時にブラウザやエディタで開く、httpsの対応のオレオレ証明生成などに対応している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;callstack-linaria-zero-runtime-css-in-js-library&quot;&gt;callstack/linaria: Zero-runtime CSS in JS library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/callstack/linaria&quot; title=&quot;callstack/linaria: Zero-runtime CSS in JS library&quot;&gt;github.com/callstack/linaria&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS-in-JSでスタイルを書いて、そのスタイルをCSSファイルに分離するライブラリとツールキット。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 20 Apr 2021 11:45:24 +0900</pubDate>
        <link>https://jser.info/2021/04/20/headless-ui-1.0-esbuildsnowpackvitewmr-debugging-web-vitals/</link>
        <guid isPermaLink="true">https://jser.info/2021/04/20/headless-ui-1.0-esbuildsnowpackvitewmr-debugging-web-vitals/</guid>
        
        <category>Tools</category>
        
        <category>performance</category>
        
        <category>Chrome</category>
        
        <category>browser</category>
        
        <category>TypeScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-04-13のJS: Node.jsのセキュリティアップデート、Cloudflare Pages、migrating Chrome  DevTools to TypeScript</title>
        <description>&lt;p&gt;JSer.info #535 - Node.jsのセキュリティアップデートとしてNode.js v10.24.1, v12.22.1, v14.16.1, v15.14.0がそれぞれリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/april-2021-security-releases/&quot;&gt;April 2021 Security Releases | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OpenSSL関係が2件と同梱されているnpmが依存する&lt;code&gt;y18n&lt;/code&gt;のprototype pollutionに関するアップデートが含まれています。&lt;/p&gt;

&lt;p&gt;また、Node.js 10 LTSのサポート期限は2021-04-30までとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Cloudflareの静的サイトホスティングサービスのCloudflare PagesがGAとなり一般公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudflare-pages-ga/&quot;&gt;Cloudflare Pages is now Generally Available&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VercelやNetlifyと類似するウェブサービスで&lt;a href=&quot;https://jamstack.org/&quot;&gt;Jamstack&lt;/a&gt;のような静的サイトを手軽に公開することに特化したサービスです。&lt;br&gt;
類似サービスとの比較は次の記事にまとまっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/catnose99/scraps/6780379210136f&quot;&gt;Cloudflare Pages・Vercel ・Netlify の違いや使い分けをまとめる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;既知の問題などはドキュメントページにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.cloudflare.com/pages/platform/known-issues&quot;&gt;Known issues · Cloudflare Pages docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/migrating-to-typescript/&quot;&gt;DevTools architecture refresh: migrating DevTools to TypeScript - Chrome Developers&lt;/a&gt;という記事では、Chrome DevToolsのコードベースをClosure Compilerベースの型チェックからTypeScriptへどのようにマイグレーションしているかについて書かれています。&lt;/p&gt;

&lt;p&gt;もともとClosure Compilerベースの型チェックが行われていましたが、なぜTypeScriptへ移行するのかについて書かれています。また、移行の仕方として&lt;code&gt;any&lt;/code&gt;で一時的に型エラーを抑制するのではなく、TSの型エラーを手動で修正する時間がかかる方法を選んだのかについても書かれています。&lt;/p&gt;

&lt;p&gt;この記事の前段として、独自のモジュールの仕組みなどをもったレガシーなChrome DevToolsのコードベースをどのようにモダンにしたかの動画も合わせてみるとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BHogHiiyuQk&quot;&gt;Upgrading DevTools&amp;#39; architecture to the modern web - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-20-0-date-fns-date-fns&quot;&gt;Release v2.20.0 · date-fns/date-fns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/date-fns/date-fns/releases/tag/v2.20.0&quot; title=&quot;Release v2.20.0 · date-fns/date-fns&quot;&gt;github.com/date-fns/date-fns/releases/tag/v2.20.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;date-fns 2.20.0リリース。&lt;br&gt;
&lt;code&gt;eachMinuteOfInterval&lt;/code&gt;, &lt;code&gt;nextWednesday&lt;/code&gt;, &lt;code&gt;nextThursday&lt;/code&gt;, &lt;code&gt;nextFriday&lt;/code&gt;, &lt;code&gt;nextSaturday&lt;/code&gt;, &lt;code&gt;nextSunday&lt;/code&gt; の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;april-2021-security-releases-node-js&quot;&gt;April 2021 Security Releases | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/april-2021-security-releases/&quot; title=&quot;April 2021 Security Releases | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/april-2021-security-releases/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティアップデート。&lt;br&gt;
OpenSSL関係が2件、&lt;code&gt;y18n&lt;/code&gt;のprototype pollutionに関するアップデート。&lt;br&gt;
Node.js v10.24.1, v12.22.1, v14.16.1, v15.14.0がそれぞれリリースされている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-1-verdaccio-verdaccio&quot;&gt;Release v5.0.1 · verdaccio/verdaccio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/verdaccio/verdaccio/releases/tag/v5.0.1&quot; title=&quot;Release v5.0.1 · verdaccio/verdaccio&quot;&gt;github.com/verdaccio/verdaccio/releases/tag/v5.0.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm registryの実装であるverdaccio 5.0リリース。&lt;br&gt;
npm token createのサポートがデフォルト化、native moduleへの依存の問題からtokenの保存にleveldbではなくlowdbを利用するように。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typicode/lowdb&quot; title=&quot;typicode/lowdb: ⚡️ lowdb is a small local JSON database powered by Lodash (supports Node, Electron and the browser)&quot;&gt;typicode/lowdb: ⚡️ lowdb is a small local JSON database powered by Lodash (supports Node, Electron and the browser)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloudflare-pages-is-now-generally-available&quot;&gt;Cloudflare Pages is now Generally Available&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudflare-pages-ga/&quot; title=&quot;Cloudflare Pages is now Generally Available&quot;&gt;blog.cloudflare.com/cloudflare-pages-ga/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare PagesがGAとなり一般公開された。&lt;br&gt;
Netlifyライクな&lt;code&gt;_redirects&lt;/code&gt;ファイルのサポート。&lt;br&gt;
今後はGitLab/Bitbucket連携、webhooks、A/B testing、Cloudflare Workersとの連携強化をしていく予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es2021-edition-of-javascript-for-impatient-programmers&quot;&gt;ES2021 edition of “JavaScript for impatient programmers”&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/rauschma/e9c00fddc17e73fab6ce6c22b2e78e17&quot; title=&quot;ES2021 edition of “JavaScript for impatient programmers”&quot;&gt;gist.github.com/rauschma/e9c00fddc17e73fab6ce6c22b2e78e17&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript for impatient programmersのES2021版がリリース。&lt;br&gt;
ES2021版の変更点について書かれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://exploringjs.com/impatient-js/&quot; title=&quot;JavaScript for impatient programmers (ES2021 edition)&quot;&gt;JavaScript for impatient programmers (ES2021 edition)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-version-7-0-0-react-hook-form-react-hook-form&quot;&gt;Release Version 7.0.0 · react-hook-form/react-hook-form&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/react-hook-form/react-hook-form/releases/tag/v7.0.0&quot; title=&quot;Release Version 7.0.0 · react-hook-form/react-hook-form&quot;&gt;github.com/react-hook-form/react-hook-form/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Hook Form 7.0.0リリース。&lt;br&gt;
&lt;code&gt;register&lt;/code&gt;の使い方の変更、&lt;code&gt;valueAs*&lt;/code&gt;が&lt;code&gt;validate&lt;/code&gt;の前に処理されるように、APIの返り値や引数の変更などが含まれている。&lt;br&gt;
マイグレーション用のツールも合わせて公開されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://react-hook-form.com/migrate-v6-to-v7/&quot; title=&quot;Migrate From V6 to V7 | React Hook Form - Simple React forms validation&quot;&gt;Migrate From V6 to V7 | React Hook Form - Simple React forms validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;evolving-the-cls-metric&quot;&gt;Evolving the CLS metric&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/evolving-cls/&quot; title=&quot;Evolving the CLS metric&quot;&gt;web.dev/evolving-cls/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CLSのスコア計算のロジックの変更について。&lt;br&gt;
1秒のギャップ/最大5秒のセッションウィンドウでLayout Shiftを検出して、その合計をCLSのスコアとする予定について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/better-layout-shift-metric/&quot; title=&quot;Feedback wanted: The road to a better layout shift metric for long-lived pages&quot;&gt;Feedback wanted: The road to a better layout shift metric for long-lived pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-architecture-refresh-migrating-devtools-to-typescript-chrome-developers&quot;&gt;DevTools architecture refresh: migrating DevTools to TypeScript - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/migrating-to-typescript/&quot; title=&quot;DevTools architecture refresh: migrating DevTools to TypeScript - Chrome Developers&quot;&gt;developer.chrome.com/blog/migrating-to-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome DevToolsのコードベースを&lt;br&gt;
Closure Compilerベースの型チェックからTypeScriptに移行する話。&lt;br&gt;
なぜ移行するのか、TypeScriptの型推論の評価、移行のオプションですべてのTSエラーを修正する方法を選んだ理由、マイグレーションの分析などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-definitive-guide-to-profiling-react-applications&quot;&gt;The definitive guide to profiling React applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.asayer.io/the-definitive-guide-to-profiling-react-applications&quot; title=&quot;The definitive guide to profiling React applications&quot;&gt;blog.asayer.io/the-definitive-guide-to-profiling-react-applications&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React DevToolsを使ったプロファイルとパフォーマンス改善について。&lt;br&gt;
DevToolsのFlamegraphなどの各種グラフの読み方、renderやcommitの意味、&lt;code&gt;Profiler&lt;/code&gt;コンポーネントについて。&lt;br&gt;
入力に対してデータの取得と更新を行うコードを例にしたプロファイラを使った改善の例など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cookpad-online-spring-internship-2021-youtube&quot;&gt;Cookpad Online Spring Internship 2021 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLGT7Exkshx4ifQpZkjim4yJN52D00Ej3c&quot; title=&quot;Cookpad Online Spring Internship 2021 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLGT7Exkshx4ifQpZkjim4yJN52D00Ej3c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript/TypeScript/React/Next.jsの概要を紹介する動画&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webrtc&quot;&gt;はじめに | 好奇心旺盛な人のためのWebRTC&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webrtcforthecurious.com/ja/&quot; title=&quot;はじめに | 好奇心旺盛な人のためのWebRTC&quot;&gt;webrtcforthecurious.com/ja/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;translate&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTC For The Curiousの日本語訳&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 13 Apr 2021 22:32:18 +0900</pubDate>
        <link>https://jser.info/2021/04/13/node.js-cloudflare-pages-migrating-chrome-devtools-to-typescript/</link>
        <guid isPermaLink="true">https://jser.info/2021/04/13/node.js-cloudflare-pages-migrating-chrome-devtools-to-typescript/</guid>
        
        <category>React</category>
        
        <category>performance</category>
        
        <category>Chrome</category>
        
        <category>book</category>
        
        <category>node.js</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
